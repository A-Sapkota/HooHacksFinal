#define SINGLE_FILE
/**
  ******************************************************************************
  * @file    number.hh
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    2 february 2021
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef __NUMBER_H__
#define __NUMBER_H__

#include <stdint.h>

#define FIXED_POINT	9	// Fixed point scaling factor, set to 0 when using floating point
#define NUMBER_MIN	-32768	// Max value for this numeric type
#define NUMBER_MAX	32767	// Min value for this numeric type
typedef int16_t number_t;		// Standard size numeric type used for weights and activations
typedef int32_t long_number_t;	// Long numeric type used for intermediate results

#ifndef min
static inline long_number_t min(long_number_t a, long_number_t b) {
	if (a <= b)
		return a;
	return b;
}
#endif

#ifndef max
static inline long_number_t max(long_number_t a, long_number_t b) {
	if (a >= b)
		return a;
	return b;
}
#endif

#if FIXED_POINT > 0 // Scaling/clamping for fixed-point representation
static inline long_number_t scale_number_t(long_number_t number) {
	return number >> FIXED_POINT;
}
static inline number_t clamp_to_number_t(long_number_t number) {
	return (number_t) max(NUMBER_MIN, min(NUMBER_MAX, number));
}
#else // No scaling/clamping required for floating-point
static inline long_number_t scale_number_t(long_number_t number) {
	return number;
}
static inline number_t clamp_to_number_t(long_number_t number) {
	return (number_t) number;
}
#endif


#endif //__NUMBER_H__
/**
  ******************************************************************************
  * @file    conv.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_CHANNELS      3
#define INPUT_SAMPLES       32
#define CONV_FILTERS        64
#define CONV_KERNEL_SIZE    3
#define CONV_STRIDE         1

#define ZEROPADDING_LEFT    0
#define ZEROPADDING_RIGHT   0

#define CONV_OUTSAMPLES     ( ( (INPUT_SAMPLES - CONV_KERNEL_SIZE + ZEROPADDING_LEFT + ZEROPADDING_RIGHT) / CONV_STRIDE ) + 1 )

#define ACTIVATION_RELU

typedef number_t conv1d_26_output_type[CONV_FILTERS][CONV_OUTSAMPLES];

static inline void conv1d_26(
  const number_t input[INPUT_CHANNELS][INPUT_SAMPLES],               // IN
  const number_t kernel[CONV_FILTERS][INPUT_CHANNELS][CONV_KERNEL_SIZE], // IN

  const number_t bias[CONV_FILTERS],						                // IN

  number_t output[CONV_FILTERS][CONV_OUTSAMPLES]) {               // OUT

  unsigned short pos_x, z, k; 	// loop indexes for output volume
  unsigned short x;
  short input_x;
  long_number_t	kernel_mac;
  static long_number_t	output_acc[CONV_OUTSAMPLES];
  long_number_t tmp;

  for (k = 0; k < CONV_FILTERS; k++) { 
    for (pos_x = 0; pos_x < CONV_OUTSAMPLES; pos_x++) { 
      output_acc[pos_x] = 0;
	    for (z = 0; z < INPUT_CHANNELS; z++) {

        kernel_mac = 0; 
        for (x = 0; x < CONV_KERNEL_SIZE; x++) {
          input_x = pos_x * CONV_STRIDE - ZEROPADDING_LEFT + x;
          if (input_x < 0 || input_x >= INPUT_SAMPLES) // ZeroPadding1D
            tmp = 0;
          else
            tmp = input[z][input_x] * kernel[k][z][x]; 
          kernel_mac = kernel_mac + tmp; 
        }

	      output_acc[pos_x] = output_acc[pos_x] + kernel_mac; 
      }
      output_acc[pos_x] = scale_number_t(output_acc[pos_x]);

      output_acc[pos_x] = output_acc[pos_x] + bias[k]; 

    }

    for (pos_x = 0; pos_x < CONV_OUTSAMPLES; pos_x++) {
#ifdef ACTIVATION_LINEAR
      output[k][pos_x] = clamp_to_number_t(output_acc[pos_x]);
#elif defined(ACTIVATION_RELU)
      // Activation function: ReLU
      if (output_acc[pos_x] < 0)
        output[k][pos_x] = 0;
      else
        output[k][pos_x] = clamp_to_number_t(output_acc[pos_x]);
#endif
    }
  }
}

#undef INPUT_CHANNELS
#undef INPUT_SAMPLES
#undef CONV_FILTERS
#undef CONV_KERNEL_SIZE
#undef CONV_STRIDE
#undef ZEROPADDING_LEFT
#undef ZEROPADDING_RIGHT
#undef CONV_OUTSAMPLES
#undef ACTIVATION_RELU
/**
  ******************************************************************************
  * @file    weights/conv.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#define INPUT_CHANNELS    3
#define CONV_FILTERS      64
#define CONV_KERNEL_SIZE  3


const int16_t conv1d_26_bias[CONV_FILTERS] = {-58, -50, 74, 13, -18, 19, -1, -38, -11, -25, -38, 74, -17, -72, -6, -32, -47, 91, 5, 12, 13, -23, 75, -26, 0, -78, -71, -43, 61, -6, 51, -21, -31, -2, -3, 12, -16, 11, 61, -87, -88, -91, -3, -30, -54, -14, 18, -6, 0, -41, 4, -20, -108, -36, -37, 82, 77, 29, -106, 0, 23, 23, -46, -9}
;

const int16_t conv1d_26_kernel[CONV_FILTERS][INPUT_CHANNELS][CONV_KERNEL_SIZE] = {{{-145, 151, 34}
, {-246, 40, -89}
, {-9, -50, -56}
}
, {{8, -199, -242}
, {77, 120, 119}
, {-30, 36, 64}
}
, {{-158, -52, 101}
, {-169, -184, -157}
, {-94, -81, -196}
}
, {{-39, 61, 86}
, {69, 47, -85}
, {23, -133, 131}
}
, {{81, 139, 3}
, {-82, -27, -68}
, {-1, 4, 9}
}
, {{-117, -29, -108}
, {-98, 8, 114}
, {-218, -130, -47}
}
, {{-172, -94, 40}
, {76, 98, 27}
, {16, 30, -81}
}
, {{-148, 85, -201}
, {33, -137, 55}
, {-143, 93, 36}
}
, {{-181, -231, -192}
, {110, -2, 29}
, {18, -3, -39}
}
, {{32, 24, 24}
, {-22, 84, 23}
, {100, 5, -152}
}
, {{52, -54, -95}
, {4, -50, -13}
, {31, 47, 30}
}
, {{-98, 100, 101}
, {-1, -251, -281}
, {-182, -167, -193}
}
, {{197, -168, 180}
, {-16, 81, 18}
, {12, 116, -154}
}
, {{-44, 65, -64}
, {-24, -41, 21}
, {-25, 45, -103}
}
, {{187, 56, -61}
, {-41, -60, -89}
, {13, 2, 6}
}
, {{-40, 11, -42}
, {-48, 36, -103}
, {23, -141, 34}
}
, {{89, 29, -144}
, {-12, -167, -110}
, {-12, -21, -114}
}
, {{-68, -43, 152}
, {16, -169, -38}
, {-246, -183, -156}
}
, {{15, -26, -156}
, {-80, -168, -188}
, {2, 19, -65}
}
, {{305, 273, 125}
, {9, -88, -261}
, {-165, -72, -73}
}
, {{110, 117, 277}
, {20, 65, -41}
, {-86, -116, 108}
}
, {{1, -77, 66}
, {-30, 35, -20}
, {39, -45, -71}
}
, {{-157, -85, -103}
, {37, 34, -13}
, {-285, -215, -285}
}
, {{106, -144, -25}
, {-66, 32, -29}
, {29, -153, 115}
}
, {{-39, 92, -183}
, {-25, -126, 59}
, {-66, 127, -93}
}
, {{-135, 83, -193}
, {-94, 10, -41}
, {-7, 69, -101}
}
, {{29, -96, -155}
, {-82, -51, 150}
, {-15, -15, 44}
}
, {{74, -93, 136}
, {3, -48, -116}
, {-84, 21, -48}
}
, {{-81, -49, 75}
, {-43, -136, -126}
, {-59, -105, -251}
}
, {{-143, -93, 48}
, {-158, -268, -233}
, {-52, -70, -86}
}
, {{-179, -145, -123}
, {5, 80, 33}
, {-171, -61, -165}
}
, {{-136, 22, -165}
, {-22, -105, 70}
, {-141, 140, 33}
}
, {{-49, -120, -119}
, {104, -94, -85}
, {35, 29, 20}
}
, {{106, -58, -69}
, {-50, -104, 108}
, {-79, 120, -77}
}
, {{-36, 134, 203}
, {114, -16, 50}
, {-49, -78, 141}
}
, {{196, 45, -112}
, {176, 175, 229}
, {-174, -19, -60}
}
, {{-108, 112, -111}
, {19, -129, 65}
, {-139, 35, 93}
}
, {{63, -110, 81}
, {-117, 37, -92}
, {65, -39, -47}
}
, {{23, -40, 65}
, {24, -89, -95}
, {-212, -285, -346}
}
, {{94, -125, -201}
, {52, -47, 63}
, {-8, -33, 111}
}
, {{59, 159, 238}
, {-75, -59, -6}
, {-15, -21, -58}
}
, {{18, -46, -56}
, {-249, -265, -237}
, {-79, -27, -7}
}
, {{-29, 253, 181}
, {-50, -57, 141}
, {-175, 74, 93}
}
, {{130, 84, 98}
, {-97, -31, -148}
, {-45, -54, -121}
}
, {{12, 277, 241}
, {-186, 19, -137}
, {-65, -31, -12}
}
, {{-48, 55, 21}
, {87, -27, 18}
, {109, -140, -179}
}
, {{-79, 75, -200}
, {-68, -155, 18}
, {-109, 152, -67}
}
, {{166, -143, 176}
, {-72, 127, -46}
, {105, -160, 91}
}
, {{178, -179, 71}
, {144, -152, -178}
, {28, -101, 8}
}
, {{289, -194, 290}
, {94, 52, 78}
, {-111, 72, 79}
}
, {{29, -20, -114}
, {-37, -49, 82}
, {-33, 131, -148}
}
, {{-87, 205, 29}
, {-133, 65, 111}
, {21, -120, 59}
}
, {{-5, -37, -133}
, {-48, -105, -108}
, {-43, -17, 67}
}
, {{-64, -88, -83}
, {104, 35, 30}
, {-11, -8, -28}
}
, {{-53, 102, -48}
, {52, -42, -6}
, {39, -109, 2}
}
, {{-8, -89, 80}
, {-44, -94, -19}
, {-248, -206, -240}
}
, {{-37, 247, 0}
, {140, 182, -18}
, {-83, -27, -118}
}
, {{-166, -111, 8}
, {-55, -109, -132}
, {-199, -82, -157}
}
, {{27, 292, 63}
, {-158, 129, -181}
, {-39, 9, -69}
}
, {{337, 0, 333}
, {-57, 55, -12}
, {28, 72, -121}
}
, {{2, -23, -26}
, {243, -210, -195}
, {85, -101, -206}
}
, {{45, 62, 182}
, {130, 45, -53}
, {63, -196, -157}
}
, {{-7, -163, -115}
, {46, 37, 129}
, {103, 0, -162}
}
, {{3, -31, -31}
, {-32, -28, -82}
, {0, 41, 10}
}
}
;

#undef INPUT_CHANNELS
#undef CONV_FILTERS
#undef CONV_KERNEL_SIZE
/**
  ******************************************************************************
  * @file    maxpool.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_CHANNELS  64
#define INPUT_SAMPLES   30
#define POOL_SIZE       4
#define POOL_STRIDE     4
#define POOL_PAD        0 // Unsupported
#define POOL_LENGTH	    ( ( (INPUT_SAMPLES - POOL_SIZE + (2*POOL_PAD) ) / POOL_STRIDE ) + 1 )

#define ACTIVATION_LINEAR

typedef number_t max_pooling1d_23_output_type[INPUT_CHANNELS][POOL_LENGTH];

static inline void max_pooling1d_23(
  const number_t input[INPUT_CHANNELS][INPUT_SAMPLES], 	    // IN
  number_t output[INPUT_CHANNELS][POOL_LENGTH]) {	// OUT

  unsigned short pos_x, k; 	// loop indexes for output volume
  unsigned int x;
  number_t max, tmp; 

  for (k = 0; k < INPUT_CHANNELS; k++) 
    for (pos_x = 0; pos_x < POOL_LENGTH; pos_x++) {
#ifdef ACTIVATION_LINEAR
      max = input[k][pos_x*POOL_STRIDE];
      x = 1;
#elif defined(ACTIVATION_RELU)
      max = 0;
      x = 0;
#endif
      for (; x < POOL_SIZE; x++) {
        tmp = input[k][(pos_x*POOL_STRIDE)+x]; 
        if (max < tmp)
          max = tmp;
      }
      output[k][pos_x] = max; 
    }
}

#undef INPUT_CHANNELS  
#undef INPUT_SAMPLES
#undef POOL_SIZE
#undef POOL_STRIDE
#undef POOL_PAD
#undef POOL_LENGTH
#undef ACTIVATION_LINEAR
/**
  ******************************************************************************
  * @file    conv.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_CHANNELS      64
#define INPUT_SAMPLES       7
#define CONV_FILTERS        64
#define CONV_KERNEL_SIZE    3
#define CONV_STRIDE         1

#define ZEROPADDING_LEFT    0
#define ZEROPADDING_RIGHT   0

#define CONV_OUTSAMPLES     ( ( (INPUT_SAMPLES - CONV_KERNEL_SIZE + ZEROPADDING_LEFT + ZEROPADDING_RIGHT) / CONV_STRIDE ) + 1 )

#define ACTIVATION_RELU

typedef number_t conv1d_27_output_type[CONV_FILTERS][CONV_OUTSAMPLES];

static inline void conv1d_27(
  const number_t input[INPUT_CHANNELS][INPUT_SAMPLES],               // IN
  const number_t kernel[CONV_FILTERS][INPUT_CHANNELS][CONV_KERNEL_SIZE], // IN

  const number_t bias[CONV_FILTERS],						                // IN

  number_t output[CONV_FILTERS][CONV_OUTSAMPLES]) {               // OUT

  unsigned short pos_x, z, k; 	// loop indexes for output volume
  unsigned short x;
  short input_x;
  long_number_t	kernel_mac;
  static long_number_t	output_acc[CONV_OUTSAMPLES];
  long_number_t tmp;

  for (k = 0; k < CONV_FILTERS; k++) { 
    for (pos_x = 0; pos_x < CONV_OUTSAMPLES; pos_x++) { 
      output_acc[pos_x] = 0;
	    for (z = 0; z < INPUT_CHANNELS; z++) {

        kernel_mac = 0; 
        for (x = 0; x < CONV_KERNEL_SIZE; x++) {
          input_x = pos_x * CONV_STRIDE - ZEROPADDING_LEFT + x;
          if (input_x < 0 || input_x >= INPUT_SAMPLES) // ZeroPadding1D
            tmp = 0;
          else
            tmp = input[z][input_x] * kernel[k][z][x]; 
          kernel_mac = kernel_mac + tmp; 
        }

	      output_acc[pos_x] = output_acc[pos_x] + kernel_mac; 
      }
      output_acc[pos_x] = scale_number_t(output_acc[pos_x]);

      output_acc[pos_x] = output_acc[pos_x] + bias[k]; 

    }

    for (pos_x = 0; pos_x < CONV_OUTSAMPLES; pos_x++) {
#ifdef ACTIVATION_LINEAR
      output[k][pos_x] = clamp_to_number_t(output_acc[pos_x]);
#elif defined(ACTIVATION_RELU)
      // Activation function: ReLU
      if (output_acc[pos_x] < 0)
        output[k][pos_x] = 0;
      else
        output[k][pos_x] = clamp_to_number_t(output_acc[pos_x]);
#endif
    }
  }
}

#undef INPUT_CHANNELS
#undef INPUT_SAMPLES
#undef CONV_FILTERS
#undef CONV_KERNEL_SIZE
#undef CONV_STRIDE
#undef ZEROPADDING_LEFT
#undef ZEROPADDING_RIGHT
#undef CONV_OUTSAMPLES
#undef ACTIVATION_RELU
/**
  ******************************************************************************
  * @file    weights/conv.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#define INPUT_CHANNELS    64
#define CONV_FILTERS      64
#define CONV_KERNEL_SIZE  3


const int16_t conv1d_27_bias[CONV_FILTERS] = {-26, 78, -37, -10, -49, 79, -63, 46, -28, -41, -28, -28, 4, -30, -30, -63, -13, 34, -12, -38, 160, -38, -20, -28, -33, 62, 23, -37, -33, -2, -43, -70, -1, -4, -30, -28, -34, -30, -37, -109, 20, 4, -46, -22, -39, 93, -30, -42, 58, 87, 91, 66, -54, 0, -30, 37, -33, -114, -47, -39, -30, -52, -28, 84}
;

const int16_t conv1d_27_kernel[CONV_FILTERS][INPUT_CHANNELS][CONV_KERNEL_SIZE] = {{{-22, 59, 84}
, {-42, 40, -60}
, {116, 28, 87}
, {-112, 69, -143}
, {-68, 28, 53}
, {152, 11, -115}
, {30, 57, 16}
, {18, -42, -160}
, {82, 159, 43}
, {-27, -52, 54}
, {-107, 30, 52}
, {126, -5, 157}
, {-24, -71, -94}
, {-92, -32, 9}
, {-18, 61, 48}
, {-27, -34, -39}
, {-12, 21, 4}
, {155, 29, 119}
, {-107, 7, 72}
, {66, 29, 71}
, {-54, 60, -174}
, {4, -20, -19}
, {69, 90, 127}
, {53, -57, 36}
, {-110, -48, -8}
, {-69, 51, 38}
, {-7, -41, 34}
, {-83, 59, 28}
, {90, 6, 0}
, {22, -8, 39}
, {73, 97, 90}
, {-68, -28, -57}
, {-111, 109, 35}
, {-47, -5, -54}
, {-56, 89, -148}
, {45, 10, -59}
, {-39, 10, -106}
, {0, 20, 116}
, {117, 61, 132}
, {-49, 51, -57}
, {-29, -12, 88}
, {98, 27, 102}
, {-104, 75, -86}
, {103, 81, -23}
, {79, 137, 46}
, {-58, -141, -67}
, {-87, -36, -95}
, {-51, -43, 0}
, {-52, 229, -16}
, {16, 148, -64}
, {-27, -66, -32}
, {22, 113, 132}
, {-55, 66, -23}
, {28, 23, 22}
, {2, 69, -29}
, {140, 7, 108}
, {75, 134, -33}
, {63, -28, -72}
, {30, 289, 49}
, {-19, -51, -92}
, {-23, 70, -215}
, {52, -18, 27}
, {-37, 0, -12}
, {-15, 73, -59}
}
, {{-63, -88, -90}
, {50, 33, 142}
, {-93, -151, -53}
, {-138, -69, -86}
, {30, -17, 65}
, {-71, -89, -69}
, {14, -84, 49}
, {59, -111, 136}
, {69, -62, 129}
, {-123, -30, 0}
, {48, 57, 163}
, {-116, -91, -98}
, {-190, -88, -132}
, {48, -104, 21}
, {54, 15, 100}
, {-14, -29, -5}
, {-1, -65, 75}
, {-148, -296, -191}
, {-35, -116, 0}
, {-217, -213, -189}
, {-67, -84, -109}
, {16, -22, 27}
, {-80, -316, -141}
, {-21, -121, -55}
, {-79, -83, -99}
, {29, -12, -24}
, {53, -42, 188}
, {-24, -6, 22}
, {-101, -172, -96}
, {-43, -86, 56}
, {-164, -53, -31}
, {2, -12, 89}
, {48, -23, 63}
, {-61, -108, -76}
, {-6, -36, -22}
, {24, -71, -19}
, {-27, -108, 56}
, {-47, -67, -59}
, {-24, -112, -127}
, {87, -14, 117}
, {-40, -47, 74}
, {-58, -44, -36}
, {-39, -29, 15}
, {-78, 20, 1}
, {-187, -143, -76}
, {-111, -160, 9}
, {-90, -206, 21}
, {-20, -91, -70}
, {-71, -154, -214}
, {-109, 7, 2}
, {-134, -138, 37}
, {-34, 43, -93}
, {2, -17, 109}
, {26, 2, 68}
, {-89, -57, -46}
, {-97, -314, -144}
, {-108, -218, -191}
, {-91, -317, -23}
, {-87, -153, -88}
, {-153, -181, -114}
, {-72, -134, 10}
, {-54, -96, -229}
, {-42, -74, 77}
, {67, 54, 47}
}
, {{-54, -90, 7}
, {-89, -48, 22}
, {4, -10, -61}
, {-86, -42, -96}
, {-88, -23, -61}
, {-27, -33, 10}
, {-70, 0, 13}
, {-42, -30, -97}
, {19, -23, -76}
, {-91, -62, 12}
, {-86, -58, -55}
, {-56, -19, -6}
, {5, -92, -32}
, {-30, -43, -12}
, {-48, -15, -31}
, {-20, -25, -96}
, {-5, 22, -78}
, {-29, -48, -5}
, {-19, 3, -39}
, {-30, -37, -79}
, {-81, -27, -84}
, {-10, -18, -2}
, {-4, -17, -76}
, {-35, -40, -103}
, {-29, -17, -74}
, {-56, -75, 5}
, {-19, 6, -50}
, {-45, -104, -32}
, {-2, -13, -95}
, {-75, -12, 15}
, {-82, -39, -69}
, {-89, -77, -40}
, {-80, -30, 21}
, {-58, 17, 0}
, {-10, 14, 2}
, {-41, 30, -57}
, {-10, -97, 20}
, {12, -59, -19}
, {-38, -59, -39}
, {-102, -105, -73}
, {18, -60, -21}
, {8, -79, -2}
, {-75, -98, -43}
, {-6, -41, 15}
, {-9, 14, 9}
, {-43, -48, -2}
, {-72, -52, -10}
, {-64, -4, -88}
, {-103, -19, 33}
, {-87, -89, -62}
, {-85, 11, -18}
, {-19, -50, -96}
, {-56, -1, -18}
, {6, -84, -92}
, {14, -51, 17}
, {5, 13, -55}
, {-73, -8, -45}
, {-10, -38, -66}
, {0, -67, 25}
, {8, -47, -1}
, {-76, 22, 50}
, {-19, 15, -18}
, {-90, -57, -39}
, {21, -8, 0}
}
, {{-14, -7, -60}
, {89, 7, 116}
, {111, 86, 70}
, {-56, 13, -47}
, {-90, 3, 15}
, {-4, 140, -96}
, {110, 68, 1}
, {48, 96, 37}
, {145, 44, 101}
, {45, -45, -104}
, {-23, 17, -16}
, {151, 35, -32}
, {-14, -43, -101}
, {15, -32, -20}
, {-46, -45, -36}
, {-45, -48, -108}
, {35, -55, -80}
, {92, 125, 3}
, {-80, -97, -105}
, {140, 14, -55}
, {31, 11, -168}
, {75, -56, 15}
, {48, 174, 31}
, {10, -18, -45}
, {-40, -34, -126}
, {26, 88, -9}
, {-35, 81, -58}
, {-52, -83, -14}
, {41, 163, 41}
, {146, 39, -15}
, {146, 175, 72}
, {37, -60, -27}
, {15, 13, 93}
, {-64, -79, -99}
, {-42, 61, -20}
, {-4, 13, 14}
, {-104, -55, -47}
, {-94, -93, -116}
, {139, 192, 18}
, {42, 73, 14}
, {-4, -13, -54}
, {86, 19, -5}
, {-93, -7, -28}
, {-19, 56, 6}
, {60, 136, 16}
, {38, 60, -67}
, {58, -33, -86}
, {-100, -50, -29}
, {-90, 54, -72}
, {-10, 69, -9}
, {-44, -50, -140}
, {-68, 87, -50}
, {67, -35, -79}
, {87, 54, 82}
, {48, 74, -55}
, {48, 107, 8}
, {25, 39, 31}
, {155, 63, 4}
, {0, 159, -38}
, {-8, -41, -141}
, {16, 198, -139}
, {41, -23, -82}
, {136, 40, 89}
, {-16, 11, 51}
}
, {{104, 109, 13}
, {-9, -75, -51}
, {-39, -4, -132}
, {6, 188, 50}
, {75, 17, 2}
, {-139, 56, -53}
, {-21, -42, -128}
, {-41, 172, -17}
, {-148, 12, -160}
, {-9, 36, 69}
, {-30, -22, -4}
, {-230, -67, -14}
, {107, 112, 220}
, {-16, 27, 57}
, {57, -51, 2}
, {-27, 134, 47}
, {53, 0, -35}
, {-127, -15, -44}
, {108, 106, -41}
, {-50, 62, -25}
, {-55, 181, 181}
, {-33, 0, 45}
, {-100, -100, -102}
, {-39, 57, -17}
, {30, 97, 6}
, {0, 58, -10}
, {7, 20, -78}
, {9, 82, -118}
, {4, -41, -142}
, {-144, 77, -144}
, {-110, -137, -133}
, {-60, 126, 89}
, {-22, -69, 14}
, {48, 124, 33}
, {-34, 147, 153}
, {-3, 78, 67}
, {20, 145, 57}
, {53, 90, -67}
, {-149, -65, -27}
, {47, 43, -65}
, {20, 20, 72}
, {-89, 7, -116}
, {-91, 236, 171}
, {25, -19, 28}
, {-50, 16, -12}
, {1, -48, 129}
, {76, 158, 29}
, {140, 72, 13}
, {100, 89, -23}
, {50, 170, 152}
, {96, 51, 25}
, {21, 127, 80}
, {-56, 71, -88}
, {19, 48, -62}
, {-23, 15, -21}
, {-65, -39, -55}
, {40, -43, 56}
, {-129, -3, -91}
, {84, -3, -60}
, {34, 14, 144}
, {1, 16, -43}
, {75, 14, 16}
, {-2, -44, 67}
, {-17, -55, -14}
}
, {{0, 26, -111}
, {98, -29, 58}
, {85, -59, 44}
, {-7, -90, -93}
, {9, -23, -41}
, {115, -44, 159}
, {72, 21, 92}
, {28, -21, -154}
, {168, 54, 7}
, {-97, 60, 16}
, {17, 46, 62}
, {-12, -3, -102}
, {-64, -88, -44}
, {-15, 51, -22}
, {21, 25, -64}
, {-21, -6, 0}
, {-54, -18, 13}
, {89, -130, -71}
, {-13, 57, -55}
, {112, -67, -222}
, {120, -51, -189}
, {-32, 11, 20}
, {1, -79, 144}
, {-77, -79, -69}
, {-124, -39, -64}
, {104, 103, -17}
, {70, -22, -9}
, {1, -35, -23}
, {-56, -49, 64}
, {112, 115, -86}
, {121, 124, 128}
, {-8, -14, -12}
, {83, 29, -1}
, {-57, -30, -88}
, {37, -110, -55}
, {82, -77, 119}
, {-82, -52, -61}
, {-57, 64, -94}
, {-20, -62, 67}
, {114, 66, -38}
, {34, 22, 26}
, {113, 102, 25}
, {12, -59, -81}
, {-25, -33, -24}
, {119, -79, -93}
, {-27, -52, 39}
, {-91, 20, -155}
, {-63, -70, 0}
, {26, -72, -132}
, {106, -37, -122}
, {-167, -35, -95}
, {-16, 28, -8}
, {93, 118, -12}
, {109, -30, 24}
, {-61, -79, -42}
, {34, -82, 47}
, {129, -57, 34}
, {58, 2, 64}
, {114, -126, -82}
, {-26, -112, -50}
, {52, -34, 81}
, {-52, -77, 46}
, {-47, 38, 18}
, {95, -15, 56}
}
, {{59, 111, 1}
, {17, -29, 190}
, {-53, -72, -17}
, {64, 47, 144}
, {9, 4, -27}
, {-33, -116, -145}
, {-134, 8, 191}
, {92, 69, 236}
, {-4, -57, 138}
, {-1, 32, 92}
, {-52, 23, 142}
, {-65, -59, -168}
, {47, 9, 139}
, {35, 104, 131}
, {-61, 27, 67}
, {82, 123, 151}
, {-36, -14, 138}
, {-111, -165, -261}
, {-50, 17, 114}
, {6, -21, -234}
, {-112, -40, 30}
, {-15, -43, 48}
, {7, -167, -221}
, {154, 32, 158}
, {83, 153, 163}
, {-22, -29, 192}
, {-6, 53, 179}
, {71, -22, -1}
, {-64, -139, -74}
, {-4, -178, -44}
, {-112, -211, -73}
, {-7, 187, 201}
, {61, 26, 42}
, {-22, 123, -2}
, {-148, -96, -54}
, {-75, -52, -88}
, {71, 89, 196}
, {-46, 76, 0}
, {-74, -104, -143}
, {15, 0, 67}
, {-21, -44, -44}
, {45, -131, -106}
, {-69, 38, -18}
, {37, -50, -46}
, {-194, -161, -62}
, {-77, -25, 62}
, {129, 147, 158}
, {-67, 38, 17}
, {45, -68, 163}
, {-205, -83, -27}
, {-5, 82, 160}
, {50, 2, 100}
, {89, 27, 122}
, {29, -11, 133}
, {17, -28, -14}
, {-49, -193, -207}
, {-146, -263, -203}
, {-11, -130, -36}
, {-15, -44, 34}
, {-82, 4, -20}
, {-94, -213, 175}
, {-30, -109, -115}
, {-53, 47, 260}
, {-12, -5, 30}
}
, {{209, 95, -56}
, {42, -32, 69}
, {139, 24, 80}
, {-19, -147, -219}
, {141, 10, 12}
, {54, -121, 74}
, {25, 127, 35}
, {28, -111, -177}
, {148, 117, 74}
, {-82, 55, 13}
, {73, -7, -29}
, {40, 49, 54}
, {-145, -181, -54}
, {54, 56, 38}
, {102, -43, -5}
, {49, -53, -111}
, {174, 61, 32}
, {38, -35, 22}
, {149, 54, 63}
, {208, 24, -73}
, {120, -66, -107}
, {75, -9, 69}
, {-24, -50, 48}
, {53, 27, -113}
, {-12, 30, 28}
, {12, 112, 59}
, {0, 49, -21}
, {57, 110, 10}
, {-62, -46, 45}
, {229, 51, 132}
, {68, -35, 217}
, {21, -78, -90}
, {141, 50, -50}
, {27, 42, -80}
, {32, -140, -118}
, {-64, -156, 199}
, {-11, -107, -65}
, {23, 13, -35}
, {-39, -82, -105}
, {151, 0, -75}
, {133, 91, -83}
, {288, 188, 173}
, {83, -75, -97}
, {-26, -7, 74}
, {306, 21, -110}
, {-18, -102, 84}
, {59, -31, -34}
, {26, -5, -84}
, {169, -101, -143}
, {149, -254, -112}
, {-151, -25, -35}
, {-3, -133, 30}
, {108, 113, -52}
, {18, -12, 25}
, {60, -61, 44}
, {28, -82, 19}
, {95, -267, 124}
, {97, -68, -26}
, {175, -64, 32}
, {40, -54, -70}
, {132, -46, 124}
, {-130, -95, 69}
, {-17, -25, 103}
, {107, 13, -31}
}
, {{-2, 19, -22}
, {-68, -6, 17}
, {-14, -34, -41}
, {-87, -74, -9}
, {-58, -31, -61}
, {-9, -85, -56}
, {-62, 15, 20}
, {-55, 1, -59}
, {-14, 14, -30}
, {-85, -77, -10}
, {25, -14, -9}
, {13, -5, -85}
, {-72, -87, -11}
, {-47, -24, -81}
, {35, -81, -67}
, {-70, -67, 31}
, {-79, -83, -1}
, {22, -3, -4}
, {-53, -18, -49}
, {7, -67, 17}
, {-86, 5, -8}
, {-55, -77, 19}
, {-86, 18, 15}
, {-1, -74, -74}
, {-20, 11, -87}
, {-26, 19, -67}
, {-56, 7, -40}
, {-34, 23, -59}
, {-11, -29, -3}
, {-42, 3, 30}
, {1, -68, -24}
, {-53, -56, -37}
, {-92, -44, -48}
, {-41, -62, -77}
, {-21, -10, -64}
, {-6, 32, -85}
, {-79, -54, 28}
, {4, -49, 24}
, {-25, -80, -51}
, {-48, -13, -85}
, {-49, 9, -5}
, {-70, -12, 21}
, {0, -48, 21}
, {-6, -60, 15}
, {-25, -14, 7}
, {35, -40, 27}
, {-24, 11, 16}
, {-91, -59, -32}
, {-63, -67, 34}
, {-61, 15, 14}
, {-60, 13, -31}
, {-88, 16, -85}
, {-51, -67, -80}
, {14, -76, -22}
, {-40, 35, -86}
, {-46, -47, 14}
, {33, -68, 13}
, {13, -65, -43}
, {23, 4, -89}
, {12, 19, -8}
, {-85, -67, -85}
, {15, -42, 4}
, {-87, 28, 12}
, {8, -46, -22}
}
, {{22, -78, 54}
, {-27, -82, -84}
, {-48, -36, -48}
, {-26, -80, -8}
, {-67, -46, -39}
, {0, 20, -28}
, {43, -87, -50}
, {4, 76, 22}
, {27, -66, 24}
, {-95, -87, 39}
, {-2, -94, -39}
, {-37, -22, -61}
, {37, -38, 22}
, {-32, 4, -48}
, {-80, -49, -8}
, {-9, 77, 53}
, {22, -97, -14}
, {-59, -80, 2}
, {-41, -93, 18}
, {-18, -36, -1}
, {-28, -36, -66}
, {-5, -89, 34}
, {58, -26, -45}
, {-49, -46, 10}
, {37, -53, -13}
, {24, 28, -41}
, {-96, 25, -11}
, {-80, 23, -8}
, {-51, -68, -88}
, {-56, -14, -48}
, {24, -7, -6}
, {-22, 1, -57}
, {-64, 21, -28}
, {58, -23, -12}
, {-8, -52, -94}
, {-82, 32, -66}
, {-29, 23, -79}
, {55, -62, -20}
, {27, -37, 12}
, {-103, -104, -35}
, {4, -34, -2}
, {29, -76, -27}
, {-10, 66, -30}
, {-1, 9, -11}
, {65, -15, -53}
, {35, -20, -53}
, {0, 3, 70}
, {-25, -27, -5}
, {-44, -11, 32}
, {-103, -12, -8}
, {53, -79, 1}
, {-64, -32, 19}
, {18, -10, -2}
, {-46, -80, -3}
, {6, -47, 47}
, {45, -5, -1}
, {45, -23, 14}
, {-19, 33, -82}
, {-12, 6, -76}
, {-39, -2, -76}
, {51, -33, -55}
, {44, -6, 32}
, {-85, -39, -15}
, {25, -70, -36}
}
, {{-27, -51, -14}
, {-21, -70, -87}
, {-17, 48, 4}
, {-61, 4, -50}
, {31, 22, 36}
, {54, 40, 2}
, {-3, -20, -28}
, {35, -22, 44}
, {-28, -53, -37}
, {30, 32, 22}
, {-80, -72, -47}
, {38, -63, -16}
, {-19, -73, -75}
, {-57, -49, -45}
, {-91, -43, -85}
, {6, -59, -64}
, {23, 13, -47}
, {36, 38, 40}
, {25, -57, -14}
, {-48, -2, -77}
, {-50, -54, -26}
, {15, -37, 34}
, {-62, -38, -3}
, {-16, -38, 19}
, {-24, -2, -61}
, {-39, -45, -40}
, {-73, -50, -2}
, {-5, 6, -23}
, {15, 35, -6}
, {-28, -48, 32}
, {30, 22, 22}
, {-9, -53, -59}
, {5, 4, -46}
, {-69, 5, -73}
, {-46, -13, -19}
, {-7, 5, 20}
, {-26, -13, -15}
, {36, 13, 19}
, {-23, 33, -54}
, {-26, -49, -14}
, {-24, -26, -1}
, {-62, -6, -27}
, {-20, 9, 17}
, {-12, -88, -67}
, {-45, -21, -64}
, {-24, 48, -65}
, {2, -84, -29}
, {-76, -19, 19}
, {-46, -73, -71}
, {-46, -12, -7}
, {-74, 16, -49}
, {20, -50, 60}
, {-6, 33, -88}
, {19, -54, -50}
, {11, 39, -69}
, {10, -36, -38}
, {20, 53, 19}
, {-39, -38, 55}
, {-36, -33, -4}
, {11, -47, -67}
, {30, 41, -16}
, {-44, -24, -14}
, {22, -13, -72}
, {0, -56, -78}
}
, {{-38, 43, -31}
, {8, 28, 67}
, {-18, 8, -9}
, {-15, 68, 79}
, {-67, 12, -34}
, {17, -44, -13}
, {-10, -31, 9}
, {17, 4, 72}
, {-21, -51, 26}
, {-37, -62, 55}
, {-80, -24, 58}
, {-34, -5, 0}
, {29, -9, 63}
, {-44, 10, 20}
, {-24, 38, 62}
, {108, 62, 2}
, {38, 0, -24}
, {0, -52, -64}
, {10, -51, 52}
, {60, -65, -41}
, {49, -35, 17}
, {-104, -25, -24}
, {45, -38, 10}
, {40, 25, -33}
, {41, 1, 73}
, {-76, -15, -27}
, {-1, -5, 46}
, {-8, 72, 18}
, {-22, -75, 16}
, {-65, 7, -142}
, {-18, -107, -102}
, {-69, 13, -21}
, {-103, -54, 4}
, {25, 62, -20}
, {-15, 71, -15}
, {-16, -74, -32}
, {47, -6, -19}
, {-15, -2, 24}
, {-37, 12, -7}
, {-32, 14, 12}
, {-2, 56, -60}
, {-57, 2, -67}
, {-91, 71, 0}
, {11, -27, -51}
, {-80, 10, -66}
, {-50, -94, -63}
, {28, 18, 5}
, {82, -36, -43}
, {-58, 13, 40}
, {-83, -30, 1}
, {54, -43, -23}
, {-27, -50, -52}
, {-43, -39, -14}
, {-23, 36, 26}
, {-17, -52, -30}
, {-27, -51, -86}
, {-40, -64, 29}
, {-59, -67, -22}
, {34, -21, -32}
, {-2, 7, 17}
, {-17, -97, -85}
, {-61, -56, -3}
, {-75, -37, -10}
, {-68, 39, 35}
}
, {{45, 9, -106}
, {-1, -23, -77}
, {-60, -84, -53}
, {60, 147, 166}
, {24, -22, 17}
, {-28, -62, -37}
, {5, 39, -6}
, {-39, 63, 23}
, {-136, -140, -117}
, {33, 20, 35}
, {-27, -47, -42}
, {-53, -88, -1}
, {76, 154, 141}
, {-40, 80, 3}
, {38, 11, -47}
, {49, 34, 43}
, {-31, 63, 26}
, {-50, -70, -72}
, {3, 57, -5}
, {-17, -36, -32}
, {23, 104, 39}
, {61, -15, 56}
, {-77, -109, -139}
, {100, 83, 46}
, {74, 180, 109}
, {-7, 48, -4}
, {-42, -58, -72}
, {109, 81, 50}
, {-106, -157, -3}
, {-85, -53, -69}
, {-36, -5, -78}
, {88, 95, 70}
, {-77, -81, -41}
, {37, 130, 16}
, {39, 124, 152}
, {32, 155, 163}
, {52, 159, 69}
, {94, 80, 42}
, {-112, -126, -105}
, {-1, 1, -15}
, {53, -28, -33}
, {-82, 18, -112}
, {-18, 56, 16}
, {-54, -10, -59}
, {-31, -20, -124}
, {-20, 31, -41}
, {133, 119, 71}
, {119, 147, 112}
, {58, -20, 38}
, {39, 120, 85}
, {37, 129, 58}
, {53, 87, 84}
, {64, -4, 6}
, {-110, -19, -67}
, {14, -27, 58}
, {-101, -224, -104}
, {42, -12, -6}
, {-165, -139, -28}
, {90, -50, -110}
, {-36, 76, 161}
, {-66, -120, -56}
, {19, 76, 57}
, {-21, -70, -50}
, {-41, -39, -59}
}
, {{-86, -10, -25}
, {-28, 29, -20}
, {-11, -21, 26}
, {8, -82, 6}
, {-73, -12, -63}
, {-1, -26, -39}
, {24, 33, -8}
, {10, -90, -60}
, {-20, -9, -92}
, {23, -11, 11}
, {-31, -77, 27}
, {-13, 31, -2}
, {29, 32, -34}
, {10, -55, 31}
, {8, -93, -25}
, {-20, -8, -56}
, {10, -84, -76}
, {-32, -47, 18}
, {10, -93, -54}
, {-65, -90, -5}
, {-71, -90, -7}
, {-14, -65, -70}
, {-85, -54, 34}
, {-69, -86, -7}
, {-41, -49, -28}
, {-25, -11, 24}
, {-14, -63, -9}
, {-70, -5, -48}
, {2, 27, 58}
, {-13, 28, 54}
, {-27, -2, 13}
, {-71, 5, -64}
, {5, -90, -65}
, {-67, 13, -6}
, {0, -39, -57}
, {-58, -72, -72}
, {16, -49, 15}
, {0, -14, -71}
, {-13, -81, -46}
, {-76, -1, -69}
, {-68, -9, 4}
, {-84, -5, 7}
, {-28, -53, -94}
, {-85, -73, -24}
, {-7, -78, 54}
, {-44, -10, 52}
, {-85, -34, -71}
, {-46, -69, -59}
, {-68, -19, -57}
, {26, -21, -7}
, {-4, -18, -68}
, {-15, 23, -54}
, {-11, -61, -78}
, {-31, -59, -42}
, {14, -76, 25}
, {27, 13, -18}
, {30, -92, -38}
, {-14, 22, -24}
, {11, -63, 1}
, {14, -41, 19}
, {-88, -38, -81}
, {13, -77, 50}
, {-44, -92, 24}
, {-64, 2, -9}
}
, {{4, -71, -9}
, {32, -75, -17}
, {-57, 20, 14}
, {-22, -71, -67}
, {32, -91, 19}
, {-11, 7, 8}
, {-61, -44, -26}
, {-20, -72, -16}
, {-69, -29, -26}
, {-38, -89, -40}
, {-16, -73, -76}
, {36, -23, 21}
, {-25, 15, -56}
, {-90, -23, -36}
, {-88, -17, 28}
, {-43, 0, -19}
, {-1, 20, -66}
, {-6, 32, -81}
, {-53, -36, 33}
, {-52, -75, 12}
, {62, -59, -2}
, {-15, 28, -72}
, {13, -10, -59}
, {-49, -87, 2}
, {-55, 21, 14}
, {-12, -59, -32}
, {-8, 39, 26}
, {23, -6, -85}
, {60, -36, -82}
, {-27, -53, 31}
, {-51, -62, -2}
, {-19, 24, 8}
, {-30, 14, -13}
, {-72, -84, -86}
, {-3, -61, -73}
, {-23, -27, -17}
, {-25, -35, -13}
, {-93, -54, -17}
, {-38, -32, 23}
, {-69, -39, -32}
, {-79, -6, -77}
, {-45, -47, -5}
, {-36, -79, -85}
, {23, -42, -84}
, {0, -42, 14}
, {-50, -25, 22}
, {32, -53, -51}
, {0, -32, -84}
, {-28, -62, -18}
, {-75, -64, -78}
, {-18, 16, -35}
, {-14, 10, 18}
, {-47, -44, -17}
, {-82, -69, -90}
, {10, 1, 1}
, {32, -84, -12}
, {5, -46, -63}
, {8, -19, -17}
, {-38, 8, -13}
, {58, -59, -48}
, {-42, -8, 18}
, {-25, 18, -40}
, {-39, 0, -60}
, {-50, -41, -67}
}
, {{144, -118, -13}
, {24, 46, 164}
, {-191, -221, -88}
, {91, 203, 182}
, {33, -68, -78}
, {-156, 60, -34}
, {-32, -163, 145}
, {92, 118, 310}
, {-136, -48, 95}
, {-55, -44, 115}
, {-7, -20, -32}
, {-153, -95, -165}
, {67, 121, 121}
, {-2, 19, 79}
, {-12, -28, -57}
, {57, 115, 104}
, {46, 22, -47}
, {-77, -167, -136}
, {7, -11, -23}
, {-161, -37, -193}
, {-9, 54, 29}
, {-81, -119, 105}
, {-228, -303, -207}
, {56, 84, 52}
, {85, 12, 76}
, {23, 0, 202}
, {-63, 97, 31}
, {50, -32, -32}
, {-121, -198, -133}
, {-75, -89, -122}
, {-265, -79, 32}
, {108, 54, 109}
, {28, -4, 54}
, {103, 140, -18}
, {84, -1, 175}
, {45, -212, -190}
, {65, 148, 171}
, {36, 19, 18}
, {-173, -114, -131}
, {-28, 42, 84}
, {-70, -19, 86}
, {-86, -93, -223}
, {-48, -1, 186}
, {-60, 1, -6}
, {-263, -154, 15}
, {-133, -17, -28}
, {106, 104, 84}
, {-11, 142, 79}
, {11, -61, 42}
, {-70, -32, 96}
, {54, -9, 96}
, {17, -23, 88}
, {69, -55, 69}
, {-66, -51, 95}
, {111, -45, 5}
, {-183, -232, -217}
, {-87, -152, -286}
, {-128, -120, -104}
, {-42, -84, -113}
, {-99, -62, -9}
, {-83, -104, 17}
, {67, -97, -263}
, {-34, -5, 126}
, {21, -36, 63}
}
, {{-90, -29, -81}
, {124, 8, -196}
, {-88, 82, 119}
, {-110, 26, -148}
, {49, -122, -32}
, {-206, 75, -14}
, {27, 39, -37}
, {12, 23, -130}
, {20, 99, 22}
, {154, 122, -172}
, {73, -54, -152}
, {-126, 109, 123}
, {32, 50, -125}
, {87, 79, -43}
, {-19, -19, -82}
, {38, 0, -117}
, {24, -9, -77}
, {-85, 62, 135}
, {-18, -19, -57}
, {-282, 5, 87}
, {-184, -49, 13}
, {78, 34, -78}
, {-238, 121, 129}
, {-74, -75, -26}
, {42, -57, -124}
, {105, -23, -132}
, {51, 81, -207}
, {-50, -112, 8}
, {-161, 119, 116}
, {-149, 114, 129}
, {-165, -4, -51}
, {-28, 15, -159}
, {71, -24, -88}
, {-42, -74, -53}
, {-43, -77, -190}
, {-34, -88, -224}
, {-23, -9, -60}
, {36, 37, -88}
, {-95, 79, 157}
, {38, -21, -212}
, {-15, 2, -54}
, {-86, -16, -30}
, {-52, -71, -121}
, {65, -4, 67}
, {-178, -75, 64}
, {18, 67, -32}
, {18, -22, -45}
, {-16, -58, -39}
, {-140, -33, 4}
, {-9, -9, -166}
, {39, 17, -78}
, {-64, -62, -264}
, {-7, 42, -126}
, {6, -4, -50}
, {-1, 89, -159}
, {-126, 77, 134}
, {-52, -43, 37}
, {-218, 174, 97}
, {-234, -98, -1}
, {19, 11, 7}
, {19, 104, -19}
, {93, 45, -6}
, {92, 74, -172}
, {8, -39, -106}
}
, {{-77, -1, -48}
, {-146, -4, -20}
, {107, 144, -125}
, {7, -7, -87}
, {56, 54, 79}
, {142, 102, -18}
, {46, -13, -156}
, {16, -59, -42}
, {13, 62, -78}
, {25, -86, -115}
, {-2, 40, -42}
, {155, 146, -71}
, {76, -4, -187}
, {-43, -88, -15}
, {-19, 15, 70}
, {-109, 73, -21}
, {-85, -64, 0}
, {145, 61, -167}
, {-125, -38, -77}
, {117, 81, 119}
, {88, 34, -13}
, {-58, -129, -40}
, {102, 77, -270}
, {-91, 20, -54}
, {-103, 15, -53}
, {-134, -26, -98}
, {-65, -60, -55}
, {62, 62, 23}
, {80, 90, -138}
, {-17, 22, -160}
, {43, 38, -91}
, {-93, 24, -21}
, {-67, -43, -6}
, {11, -34, 29}
, {-48, -36, -56}
, {-126, -159, -125}
, {-49, 88, -56}
, {-128, 35, -50}
, {207, 197, -140}
, {-96, -75, 11}
, {88, 25, 38}
, {-92, 61, -119}
, {-24, 41, 90}
, {37, 120, 21}
, {147, 180, 73}
, {130, -36, -162}
, {-37, -105, -107}
, {92, 9, 0}
, {59, -28, -20}
, {3, 68, 74}
, {-66, -62, -165}
, {-65, -74, -29}
, {-86, -87, -30}
, {19, -72, -79}
, {71, -75, -158}
, {162, 97, -107}
, {81, -26, -251}
, {65, 144, -206}
, {137, 90, 28}
, {218, 95, -25}
, {109, -84, -124}
, {151, 104, -251}
, {14, -117, -124}
, {9, -55, 61}
}
, {{-66, 61, 162}
, {-91, 14, -60}
, {54, -101, 76}
, {-72, -52, -182}
, {-46, -51, 63}
, {-21, -49, 17}
, {-23, -43, -58}
, {-135, 24, -90}
, {-30, -15, -75}
, {65, -16, 44}
, {-46, 6, -23}
, {56, 20, -83}
, {39, -142, -138}
, {23, -21, 82}
, {19, 46, 11}
, {-128, 43, 68}
, {-44, -41, 89}
, {81, 125, -67}
, {-89, -23, 157}
, {59, 51, 206}
, {-10, -61, -60}
, {-1, -20, -9}
, {26, 29, -113}
, {-134, 36, 65}
, {-13, 25, 73}
, {-41, 0, 23}
, {7, -57, 17}
, {-24, -22, 32}
, {71, -79, -41}
, {-18, 30, 168}
, {32, -21, -98}
, {-33, 53, -4}
, {-19, 28, 52}
, {-54, -14, -20}
, {58, -66, -249}
, {195, -170, -249}
, {-111, 34, 42}
, {-90, -76, 82}
, {-3, -7, -60}
, {37, -14, 40}
, {-28, 0, -63}
, {-90, 98, 227}
, {25, -59, -125}
, {-13, -62, 82}
, {7, -1, 68}
, {11, -97, -109}
, {-88, -4, 116}
, {58, -76, -20}
, {-16, 88, -46}
, {-32, -165, -193}
, {-16, -48, 33}
, {128, -81, -102}
, {-65, 35, 137}
, {-94, 39, 12}
, {-81, -137, -101}
, {70, 74, -179}
, {136, -40, -231}
, {-7, -5, -9}
, {-90, 20, 128}
, {-16, -112, -8}
, {167, -6, -29}
, {39, -112, -82}
, {65, -34, -121}
, {-75, 51, 24}
}
, {{46, -7, 1}
, {-88, -52, -34}
, {46, -29, -43}
, {45, 9, -19}
, {-11, 0, -4}
, {44, 22, -7}
, {-8, -24, 5}
, {-55, -74, -22}
, {47, -87, -16}
, {-42, -5, 11}
, {-35, -39, 2}
, {-20, -63, -25}
, {1, 4, -42}
, {-52, -69, -77}
, {-88, -71, -29}
, {-17, -11, 16}
, {15, -47, -95}
, {-8, -93, -60}
, {36, -5, -21}
, {32, -49, 32}
, {-66, -81, 11}
, {13, -83, -86}
, {43, -103, 15}
, {40, -85, 16}
, {25, -18, -4}
, {-33, -76, 18}
, {25, -93, 7}
, {-30, -42, -22}
, {12, 16, -10}
, {32, 0, 57}
, {-4, -34, 51}
, {28, -64, -50}
, {-18, -84, -75}
, {-54, 8, 12}
, {-8, -56, -3}
, {-16, -5, -17}
, {32, -53, 15}
, {-30, -66, -10}
, {-72, -68, 2}
, {-85, -81, -68}
, {-68, -1, -44}
, {61, -37, -37}
, {-2, -115, -45}
, {-33, 2, -10}
, {-8, -17, 34}
, {-66, -56, 0}
, {3, 1, -1}
, {-8, 0, -39}
, {-63, 50, -17}
, {-75, -61, -22}
, {-27, 14, -43}
, {29, -42, 64}
, {-16, 20, -97}
, {-13, -75, -29}
, {-61, -46, -41}
, {-76, -73, 49}
, {-96, -67, -37}
, {29, -70, -15}
, {-62, 24, 31}
, {-35, -12, -9}
, {-70, -27, 25}
, {-7, -123, -1}
, {-35, -6, -75}
, {-77, -42, -14}
}
, {{35, 8, 75}
, {139, 63, 101}
, {-47, -42, -79}
, {-77, -1, -54}
, {77, 24, 62}
, {24, -74, -6}
, {-50, 7, 0}
, {100, -23, 107}
, {48, 17, 2}
, {-11, -34, -164}
, {55, 102, 134}
, {-135, -101, -200}
, {-123, -142, -208}
, {-17, -6, 51}
, {81, 73, 50}
, {-48, -29, 29}
, {70, -1, -65}
, {-69, -44, -204}
, {25, 30, 98}
, {-132, -37, -169}
, {-81, -45, -60}
, {-8, 9, -76}
, {-109, -135, -205}
, {39, -95, 18}
, {-103, -24, -12}
, {11, 23, 9}
, {38, 22, 139}
, {19, 54, -17}
, {-34, -9, -150}
, {44, 11, 45}
, {21, -123, -96}
, {74, -108, 97}
, {165, 106, 130}
, {11, -9, -35}
, {-32, -42, 83}
, {85, -38, -13}
, {-1, -124, 40}
, {25, 67, 86}
, {-139, -47, -138}
, {97, 12, 132}
, {31, 0, 30}
, {-110, -57, -34}
, {-5, -48, -7}
, {-62, -71, -63}
, {-166, -214, -74}
, {-69, -9, -233}
, {-80, -124, -33}
, {-59, 14, 34}
, {-86, -18, -202}
, {6, 15, 47}
, {-43, -59, 55}
, {-30, -126, 47}
, {12, -28, 82}
, {76, 75, 133}
, {-21, -22, -24}
, {-109, -201, -171}
, {4, -108, -223}
, {-26, -112, 28}
, {-47, -100, -64}
, {-113, -162, -191}
, {-104, 32, -162}
, {-95, -130, -228}
, {-31, -23, -20}
, {96, 81, 58}
}
, {{-11, -57, 3}
, {-70, 4, -47}
, {-17, -1, 17}
, {-51, -74, -43}
, {-5, -101, -12}
, {13, -77, 35}
, {-96, -20, -31}
, {-6, -95, -55}
, {46, -4, -27}
, {-12, -26, -46}
, {-72, -81, 20}
, {-84, 25, -72}
, {22, -74, 16}
, {-7, -3, -28}
, {-43, 2, -97}
, {-64, -24, -79}
, {-34, -48, -26}
, {16, -34, -19}
, {3, -66, -50}
, {-33, -76, -54}
, {-45, -103, 19}
, {-59, -3, 19}
, {-62, 26, 61}
, {24, -49, 27}
, {1, -4, -31}
, {1, 39, -2}
, {-38, 2, -46}
, {-66, -35, -98}
, {-93, -53, -42}
, {-14, -35, -34}
, {12, -89, -25}
, {-89, 0, 20}
, {-66, -50, -75}
, {-28, -98, 15}
, {-83, -20, -30}
, {-2, -2, -60}
, {-66, -81, 4}
, {-18, -7, -6}
, {-81, -35, 41}
, {-35, -24, 21}
, {-47, -33, -50}
, {-51, 3, 26}
, {-3, -11, -43}
, {-32, -56, 34}
, {7, -76, -53}
, {6, -64, 0}
, {-33, 0, 2}
, {-26, -92, -34}
, {-41, -73, -96}
, {-100, 3, -57}
, {-69, -47, -54}
, {0, -77, -60}
, {17, -61, 34}
, {-56, -68, -76}
, {17, -73, -58}
, {-99, -9, 39}
, {-78, -13, 52}
, {-17, -80, 0}
, {17, 30, -80}
, {-47, -33, -41}
, {-85, -54, -42}
, {-97, -45, 26}
, {17, -34, -54}
, {2, -23, 4}
}
, {{-27, 23, 97}
, {-32, 54, -132}
, {-180, 55, 89}
, {-2, 140, 121}
, {-30, 37, -47}
, {-171, 8, -19}
, {-126, 66, 51}
, {-50, 127, -116}
, {-139, 25, -88}
, {39, 77, 5}
, {34, 55, -94}
, {-35, 114, 46}
, {49, 101, 246}
, {31, 14, -8}
, {-13, -3, 35}
, {61, 82, 93}
, {-49, 32, 15}
, {-61, 15, 76}
, {68, 50, -45}
, {-109, 132, 93}
, {-4, 248, 54}
, {65, 26, 58}
, {-138, -82, 73}
, {-74, 51, 73}
, {-24, 98, 16}
, {44, 52, 8}
, {-57, 54, -103}
, {-11, 32, -24}
, {-129, 82, 44}
, {-133, -107, -74}
, {-132, -88, -1}
, {-36, 118, 18}
, {-43, -39, -101}
, {21, 97, 84}
, {33, 139, 17}
, {-81, 34, -113}
, {-108, 118, 51}
, {-4, 82, -44}
, {-90, 83, 140}
, {13, 3, -81}
, {64, 60, -6}
, {-160, -62, -115}
, {-94, 110, -51}
, {26, 72, 123}
, {-73, 19, -40}
, {21, 96, 8}
, {24, 51, 20}
, {62, 91, 82}
, {9, 2, 156}
, {-68, 200, 4}
, {67, 98, 93}
, {-60, 115, -107}
, {31, 3, -10}
, {-111, 44, -61}
, {31, 41, 43}
, {-140, 58, 67}
, {-140, 2, -7}
, {-198, 37, 93}
, {28, -61, 60}
, {6, 112, 128}
, {-61, -10, 9}
, {27, 78, 70}
, {14, 104, 39}
, {10, -23, -61}
}
, {{-44, -62, -21}
, {-1, -76, -82}
, {-41, 25, -18}
, {-10, 35, -63}
, {28, -73, -17}
, {-41, -65, -32}
, {22, -55, -21}
, {26, -34, 19}
, {-72, 9, -14}
, {-1, -23, -36}
, {-9, -75, -62}
, {-61, -30, -77}
, {45, -57, -7}
, {-34, -21, -15}
, {0, -11, -67}
, {-39, -60, -37}
, {63, -67, -54}
, {-49, -56, 34}
, {-55, 59, -16}
, {-20, -41, -57}
, {63, -55, 16}
, {12, -63, 60}
, {-65, -58, -53}
, {47, -62, 10}
, {-47, 53, 58}
, {-17, -37, 62}
, {-27, -2, -57}
, {55, 23, -84}
, {-90, -49, -28}
, {42, 19, -73}
, {10, 16, -42}
, {-3, -27, -41}
, {-79, -81, 12}
, {-19, 46, -65}
, {-66, -63, -15}
, {33, -67, 22}
, {40, 30, 5}
, {-46, -39, 39}
, {-40, 24, -61}
, {8, 41, -37}
, {27, -35, -66}
, {-63, 63, 23}
, {-29, -4, 19}
, {-61, 54, -48}
, {-17, 4, 1}
, {-20, -19, -18}
, {-25, -38, -7}
, {-29, -86, -62}
, {-71, -72, 32}
, {-29, 21, -16}
, {34, -9, 13}
, {30, -77, -86}
, {-57, 2, 33}
, {-18, -67, 14}
, {-88, -29, -9}
, {32, -1, -38}
, {35, -59, -30}
, {29, -9, -8}
, {-2, -57, -22}
, {18, -37, 13}
, {-30, -31, -69}
, {-42, -44, -16}
, {-68, -8, -76}
, {-76, -40, -42}
}
, {{106, 56, -30}
, {57, -66, -23}
, {-169, 57, -132}
, {79, 142, 146}
, {41, 47, -64}
, {-21, -5, -20}
, {77, -7, -125}
, {49, 103, 87}
, {-8, -126, -105}
, {68, 76, 70}
, {-6, -10, -26}
, {-219, 40, -88}
, {26, 113, 91}
, {35, 54, 104}
, {67, 46, 39}
, {95, 89, -2}
, {81, 17, 14}
, {-169, 74, -52}
, {102, 78, -42}
, {-48, 88, -57}
, {-35, 135, 56}
, {-14, 14, 23}
, {-103, -42, -199}
, {122, 144, 114}
, {147, 128, 118}
, {22, -5, 91}
, {-36, -52, -37}
, {5, -11, -94}
, {-182, 0, -192}
, {-87, 43, -64}
, {-3, 14, -81}
, {53, 86, 109}
, {-15, -87, -15}
, {5, 52, -4}
, {42, 122, 150}
, {128, 119, 208}
, {3, 115, 112}
, {70, 124, -52}
, {-157, -82, -194}
, {83, 40, 13}
, {-30, 4, -45}
, {-21, -14, -172}
, {-99, 203, 132}
, {-44, 72, -34}
, {37, 18, -64}
, {22, 85, 38}
, {159, 181, 75}
, {159, 191, 33}
, {168, 85, 60}
, {-26, 62, 123}
, {84, 208, 88}
, {118, 106, 102}
, {-5, 46, 44}
, {-15, -103, -31}
, {-17, -14, 52}
, {-191, 1, -108}
, {15, 23, 65}
, {-167, 42, -195}
, {163, -21, -46}
, {-6, 70, 44}
, {126, 43, -71}
, {49, 62, 11}
, {-87, -28, 6}
, {-20, 7, -56}
}
, {{94, 74, -98}
, {41, 34, 81}
, {58, 67, -44}
, {-91, 16, -52}
, {-35, 78, 43}
, {-100, 23, 161}
, {-31, 94, -55}
, {-7, -68, -117}
, {74, -13, -83}
, {-19, 4, -117}
, {22, 40, -20}
, {-63, -103, -82}
, {-161, -47, -66}
, {-53, -31, -107}
, {50, 48, 1}
, {54, 91, -34}
, {110, 8, -59}
, {16, -47, -8}
, {104, 70, -57}
, {10, 36, -43}
, {-135, -8, -117}
, {69, -6, -40}
, {-66, -63, -4}
, {103, -31, -200}
, {75, -21, -114}
, {51, 103, -124}
, {106, 89, -17}
, {18, 94, -10}
, {2, 17, -117}
, {129, 155, -96}
, {-114, 18, 169}
, {-30, -97, -80}
, {29, 83, -1}
, {82, -2, 0}
, {-163, 64, -39}
, {-124, 104, 146}
, {23, -71, -68}
, {24, 46, -54}
, {-74, -68, -42}
, {142, 14, 57}
, {-34, -25, -37}
, {221, 67, -31}
, {-29, 102, -36}
, {39, 22, -7}
, {64, 126, -34}
, {12, 15, -77}
, {31, 6, -215}
, {-64, 61, -65}
, {-28, 7, -49}
, {-118, 43, 8}
, {-36, 5, -125}
, {-55, 65, 95}
, {130, 28, -85}
, {37, -38, -82}
, {-21, 68, 0}
, {-97, 10, -6}
, {-71, 34, 8}
, {31, -59, -118}
, {23, 49, -65}
, {-82, 4, -91}
, {-89, 123, -155}
, {-141, 63, 12}
, {5, -22, -35}
, {-13, 45, 36}
}
, {{-91, -1, 192}
, {-106, -41, -83}
, {131, 124, -53}
, {-13, -49, -116}
, {46, 1, -6}
, {44, 79, -97}
, {26, -51, -117}
, {-74, -55, -91}
, {115, 162, -105}
, {83, -90, -81}
, {-74, -25, 20}
, {145, 188, -7}
, {139, -46, -178}
, {62, -78, -18}
, {-24, 47, 64}
, {-95, -23, -30}
, {-83, 73, 84}
, {140, 132, 39}
, {-76, 121, -21}
, {149, 20, 124}
, {129, 108, -21}
, {14, -19, -74}
, {155, 210, -16}
, {-109, -42, 28}
, {-67, 28, -154}
, {-40, -43, -126}
, {-8, -90, -26}
, {26, 71, 26}
, {71, 167, -104}
, {-4, 15, -5}
, {158, 172, -185}
, {-75, 45, -46}
, {-84, 21, 74}
, {-78, -21, 26}
, {13, 27, -93}
, {-51, -105, -46}
, {-12, -16, 35}
, {-56, -1, 7}
, {218, 196, 56}
, {-113, -52, 36}
, {87, -80, -8}
, {58, -32, -80}
, {92, -52, 37}
, {127, 114, -56}
, {232, 138, 23}
, {94, 0, -222}
, {-79, -50, -140}
, {92, -46, -19}
, {-6, -21, -61}
, {122, 18, -76}
, {-82, 11, -169}
, {-8, 50, -46}
, {-24, -42, -85}
, {53, -49, -59}
, {65, 88, -69}
, {172, 197, -57}
, {60, -8, -246}
, {89, 20, -31}
, {87, 132, 77}
, {286, 126, -82}
, {44, -42, -225}
, {139, 56, -72}
, {74, 33, -149}
, {-36, -27, 16}
}
, {{52, 42, -37}
, {18, -77, 57}
, {-145, -158, -64}
, {75, 149, 114}
, {44, -43, 48}
, {-124, -81, -69}
, {-61, -14, 51}
, {42, 102, 127}
, {-225, -1, -20}
, {82, 101, 50}
, {17, 0, -33}
, {-85, -108, -203}
, {102, 69, 152}
, {-55, 93, 134}
, {-6, -14, 55}
, {102, 163, 123}
, {-55, 24, -59}
, {-58, -77, -135}
, {-24, 26, -49}
, {12, -17, -152}
, {42, 120, 111}
, {-36, 49, 99}
, {-41, -282, -218}
, {23, 105, 35}
, {136, 111, 114}
, {57, 100, 135}
, {19, -50, 48}
, {46, 17, 5}
, {-55, -140, -111}
, {-205, -33, -181}
, {-109, -47, -155}
, {-1, 119, 116}
, {-76, -59, 26}
, {10, 51, 100}
, {52, 144, 68}
, {3, 54, 45}
, {47, 140, 158}
, {-7, 110, -7}
, {-110, -220, -162}
, {12, 52, -51}
, {26, 41, -28}
, {-54, -61, -207}
, {-32, 85, 153}
, {27, 13, -69}
, {-23, 5, -173}
, {-57, 9, 75}
, {133, 133, 89}
, {35, 185, 89}
, {45, 13, -32}
, {15, 120, 78}
, {139, 97, 130}
, {83, 120, 94}
, {-33, -15, 63}
, {1, -40, -22}
, {-3, 66, 43}
, {9, -183, -149}
, {32, -73, 35}
, {-109, -143, -21}
, {95, -87, -92}
, {12, 30, 178}
, {-140, -129, 132}
, {66, 143, 62}
, {-60, -2, 88}
, {-36, -36, -31}
}
, {{-13, -54, 53}
, {33, 0, 93}
, {-165, 76, -115}
, {89, -68, 43}
, {38, 14, -2}
, {26, 33, 20}
, {3, 107, 99}
, {66, 141, -60}
, {22, 47, 27}
, {27, -15, 2}
, {85, 51, 7}
, {-204, 13, -263}
, {145, -152, 114}
, {123, -27, 18}
, {31, -63, -33}
, {-96, -11, -7}
, {-85, 49, -117}
, {-58, 48, -66}
, {-132, 83, -130}
, {-32, -145, -130}
, {132, 21, -277}
, {-31, 4, 0}
, {-18, 41, -1}
, {-233, -20, 7}
, {-15, -37, -141}
, {12, 10, 4}
, {-57, 87, -21}
, {-142, -90, -47}
, {-188, 49, -150}
, {-166, 26, -40}
, {3, 21, 37}
, {10, 33, -124}
, {44, 17, 63}
, {-144, -53, -34}
, {194, 31, 21}
, {149, -13, 190}
, {7, -25, -155}
, {-231, -153, -48}
, {-117, 39, -205}
, {-12, 28, -77}
, {3, -282, -61}
, {-211, -8, -81}
, {188, 107, -197}
, {-220, 34, -3}
, {164, -165, -94}
, {6, 82, -66}
, {-78, 154, -22}
, {95, -181, -83}
, {184, 82, 30}
, {227, -64, 4}
, {-39, 15, -72}
, {127, -41, 99}
, {-145, -33, -18}
, {64, 70, 19}
, {36, -50, 14}
, {-89, 73, -36}
, {149, -86, 193}
, {-40, 27, -140}
, {243, 76, 239}
, {166, -256, -74}
, {100, 148, -64}
, {-46, -79, 8}
, {68, -17, 114}
, {33, -20, -42}
}
, {{14, 119, 11}
, {18, -37, 10}
, {-140, 22, -99}
, {93, -35, -148}
, {-36, 17, -13}
, {-148, -177, -90}
, {-41, -40, -49}
, {-17, -90, -21}
, {-80, -142, -54}
, {-37, 77, 20}
, {3, -4, 13}
, {-110, 33, -74}
, {37, -13, -211}
, {-74, -24, 11}
, {-11, -13, 2}
, {-31, 70, 69}
, {-59, 47, 95}
, {-35, -4, -93}
, {-70, 12, -6}
, {-42, 74, 5}
, {-58, 4, -114}
, {-68, 13, 0}
, {-70, -136, -167}
, {-19, 97, 40}
, {-66, 67, 75}
, {-76, 7, -19}
, {24, -58, -6}
, {-12, 84, 56}
, {-165, 7, -132}
, {-33, 72, 22}
, {-161, -80, -26}
, {-8, -66, -110}
, {-2, -40, 27}
, {-90, -45, 60}
, {68, -97, -171}
, {-10, -88, -41}
, {-4, 63, -35}
, {-11, 42, 73}
, {-75, -11, -84}
, {38, 23, 18}
, {1, 15, -76}
, {26, 190, 145}
, {-12, 86, -92}
, {33, 66, 89}
, {-19, 63, -38}
, {-40, -5, -106}
, {6, 72, -22}
, {-13, 55, 27}
, {272, 38, -72}
, {-33, -113, -94}
, {-127, 18, 103}
, {150, -72, -159}
, {-74, 35, -27}
, {-33, -115, -63}
, {51, 50, -111}
, {-34, 11, -104}
, {64, -142, -62}
, {-101, -70, -59}
, {39, -4, 74}
, {-22, -84, -122}
, {96, 3, -67}
, {8, 48, -123}
, {-77, -49, -26}
, {-44, -17, 57}
}
, {{95, 31, -64}
, {-3, -61, 134}
, {-209, -98, -87}
, {-13, 149, 67}
, {17, 48, 61}
, {-280, -236, -195}
, {7, -45, 157}
, {114, 174, 225}
, {-76, -22, 89}
, {57, 26, 78}
, {-14, 35, 23}
, {-159, -59, -173}
, {61, 64, 288}
, {49, -4, 153}
, {-12, 26, 11}
, {71, 46, 80}
, {17, -31, -9}
, {-113, -190, -125}
, {76, 18, -15}
, {-58, -193, -184}
, {-149, 27, -50}
, {-37, -6, 50}
, {-325, -141, -104}
, {19, 75, 69}
, {87, 149, 109}
, {130, 22, 154}
, {11, -76, 42}
, {67, 104, -57}
, {-158, -130, -120}
, {-156, -132, -141}
, {-198, -166, -89}
, {38, 145, 170}
, {-23, 7, 1}
, {23, 130, 114}
, {-33, 72, 30}
, {-208, -375, -211}
, {23, 62, 116}
, {-4, 6, 35}
, {-266, -35, -132}
, {-2, 25, 32}
, {-40, -85, -43}
, {-11, -89, -139}
, {-123, 0, 63}
, {-52, -5, -59}
, {-149, -109, -162}
, {-59, -79, 95}
, {191, 118, 119}
, {95, 112, 56}
, {-1, 5, -24}
, {-91, 63, 32}
, {175, 43, 119}
, {-19, 47, 42}
, {46, 35, 98}
, {-15, -106, 159}
, {-55, 35, -24}
, {-297, -215, -211}
, {-273, -307, -191}
, {-222, -103, -134}
, {105, -87, -48}
, {-112, -109, -45}
, {-146, -116, 61}
, {-179, -162, -87}
, {-26, -83, 242}
, {25, 41, 65}
}
, {{18, -33, -27}
, {-1, -83, -32}
, {-63, 1, -61}
, {-4, 115, 43}
, {-113, -48, -85}
, {-36, -117, -46}
, {93, -14, -117}
, {17, -33, 23}
, {26, -190, -185}
, {52, -12, -64}
, {-26, -40, -7}
, {-100, 39, -60}
, {150, 105, -24}
, {4, -45, -45}
, {-100, -118, -85}
, {49, 42, -1}
, {63, -78, -41}
, {-34, 63, -118}
, {30, -34, -98}
, {-119, -59, -51}
, {-131, 34, -137}
, {139, -34, -27}
, {-38, -91, -102}
, {41, -1, -15}
, {84, -53, 14}
, {39, 10, 55}
, {43, 8, -21}
, {17, -41, -42}
, {-77, -68, -119}
, {-70, -99, -91}
, {-136, -122, -122}
, {-3, -3, 16}
, {13, -41, -57}
, {-25, 2, -16}
, {22, 105, 36}
, {2, 4, -115}
, {43, -19, 16}
, {-31, -51, -8}
, {-1, -77, -71}
, {34, 26, 9}
, {-75, -47, 27}
, {-37, -70, -37}
, {-32, 20, 10}
, {-44, -34, 6}
, {-82, -65, -70}
, {88, 53, -67}
, {59, -62, -45}
, {89, 72, 85}
, {89, -5, -101}
, {-4, -109, 41}
, {28, -37, 3}
, {125, -75, 43}
, {-47, -88, 9}
, {25, -110, -108}
, {38, 37, -92}
, {-73, -27, -103}
, {-32, -26, -161}
, {-118, -99, -104}
, {34, -24, 84}
, {-35, -30, -59}
, {135, -2, -65}
, {-14, 54, -145}
, {126, -54, -113}
, {-71, -33, -87}
}
, {{16, 133, 125}
, {-10, 90, -15}
, {16, -26, -45}
, {51, -77, -166}
, {78, -36, 82}
, {30, -29, -92}
, {14, -16, 28}
, {-70, 4, -10}
, {-57, 131, 31}
, {-118, 6, 57}
, {57, 1, 24}
, {-41, 5, 106}
, {-85, -224, -32}
, {-50, 75, 56}
, {127, -45, 25}
, {49, -62, 35}
, {89, 106, 120}
, {-11, -45, 17}
, {93, 92, 111}
, {51, -36, 156}
, {48, -119, -129}
, {-37, 40, 43}
, {37, -88, -14}
, {-7, 18, 5}
, {-51, 54, 32}
, {-5, 71, 110}
, {-41, -24, 53}
, {84, 99, 101}
, {-32, -29, -48}
, {211, 64, 13}
, {29, 35, -96}
, {-49, -42, -32}
, {-24, 36, 57}
, {5, 79, -44}
, {101, -85, -191}
, {41, -19, 7}
, {-41, -117, -4}
, {14, 77, 75}
, {0, -118, -65}
, {104, 11, -11}
, {138, -9, -61}
, {136, 256, 139}
, {164, -108, -182}
, {57, -7, 220}
, {191, -22, 65}
, {43, -49, -92}
, {29, 83, 28}
, {63, 19, -17}
, {191, -71, -59}
, {104, -107, -148}
, {-126, 5, 100}
, {86, -74, -35}
, {-40, 73, 57}
, {-40, 126, 81}
, {21, -64, 18}
, {33, 31, -45}
, {71, -28, 36}
, {70, -18, -82}
, {95, -54, 217}
, {16, -235, -96}
, {141, -64, -62}
, {-88, -159, 44}
, {-29, -28, -19}
, {48, 36, -44}
}
, {{92, 33, 58}
, {23, 62, 64}
, {-21, 35, 71}
, {44, -128, -87}
, {86, 12, -3}
, {15, 69, 27}
, {1, 98, 127}
, {-82, 50, -31}
, {26, 88, 151}
, {-133, -25, 86}
, {73, -46, -48}
, {50, 0, 118}
, {-22, -234, -4}
, {-11, -16, 77}
, {-2, -13, -9}
, {-142, -58, -23}
, {-66, 25, -53}
, {18, -4, -15}
, {-73, -21, 29}
, {73, -161, -109}
, {134, -115, -233}
, {-87, -6, 35}
, {75, 107, 175}
, {-108, -43, -21}
, {-98, -66, -81}
, {-36, 25, 1}
, {42, 38, 14}
, {95, 38, 2}
, {-61, -38, 63}
, {34, -5, 52}
, {94, 133, 117}
, {-16, -86, 2}
, {80, 29, -46}
, {-102, 26, 42}
, {73, -151, -148}
, {-17, -28, -23}
, {-57, -81, -53}
, {-20, -13, -27}
, {92, 48, 38}
, {61, 64, -88}
, {168, -8, -105}
, {-92, 24, -63}
, {78, -83, -117}
, {-42, -16, 23}
, {196, -51, 9}
, {-24, -98, 19}
, {-161, -50, -112}
, {33, -121, -54}
, {177, -56, -116}
, {139, -115, -51}
, {-200, 61, 26}
, {53, -61, -72}
, {-112, 32, 28}
, {-66, 112, 35}
, {2, -44, 36}
, {5, 111, 36}
, {45, -60, -24}
, {13, -8, 91}
, {223, -107, 128}
, {40, -160, -163}
, {76, -76, -30}
, {20, -58, 9}
, {53, 7, 64}
, {0, 0, -18}
}
, {{38, -59, 5}
, {-33, -16, -25}
, {-24, -67, -82}
, {20, 8, -55}
, {-73, -60, -21}
, {-44, -46, -13}
, {-82, -86, 16}
, {-34, 8, -78}
, {0, -72, 1}
, {5, -61, 33}
, {-45, -92, -82}
, {-90, -80, -92}
, {76, -66, 4}
, {-6, -24, 30}
, {61, 5, -1}
, {-23, 68, 40}
, {17, 24, 0}
, {-4, -85, -15}
, {36, -81, 76}
, {-58, -67, -72}
, {-19, -50, -51}
, {-6, -1, -14}
, {-74, -18, -70}
, {-11, -5, -80}
, {79, 39, 42}
, {35, 4, 25}
, {-18, -83, 18}
, {71, -19, 49}
, {-92, -48, -16}
, {-46, -92, -65}
, {0, -77, 28}
, {26, -69, -39}
, {-56, -63, -21}
, {5, 58, -25}
, {-12, -56, -48}
, {-88, -77, -12}
, {-52, 70, 0}
, {-7, 67, 30}
, {31, 27, -57}
, {39, 0, -20}
, {28, 18, -14}
, {-74, -16, 12}
, {-38, -69, 6}
, {0, -4, -60}
, {46, -79, 32}
, {-59, -23, -31}
, {7, -46, 69}
, {-4, 13, -74}
, {-78, -30, -62}
, {-82, 23, -80}
, {55, -8, 61}
, {15, -29, -88}
, {-87, -76, 8}
, {-30, -54, -3}
, {-30, 20, -82}
, {-75, -60, -24}
, {-69, -43, 7}
, {28, 2, -18}
, {42, -26, 43}
, {41, 11, 16}
, {12, -24, 9}
, {-31, -8, -26}
, {46, 2, -89}
, {-75, -26, 13}
}
, {{-38, -51, 40}
, {-44, -86, -25}
, {32, -37, 35}
, {-54, -35, -92}
, {13, -56, 7}
, {-48, -7, -37}
, {-71, -5, 22}
, {-68, -49, -61}
, {-59, -71, -5}
, {-11, -28, 19}
, {-22, -83, 0}
, {26, -18, 10}
, {-64, -53, 9}
, {-21, 22, -8}
, {17, -85, -63}
, {-24, 47, -24}
, {-64, -19, -43}
, {-77, -63, 29}
, {-47, 38, -57}
, {-24, 32, 0}
, {58, 10, -45}
, {-62, 9, -48}
, {18, -10, -9}
, {-9, 21, 19}
, {-52, 2, 57}
, {3, 1, -72}
, {-44, -9, 34}
, {-34, -4, -31}
, {23, -79, 5}
, {24, -43, 31}
, {-90, 8, 27}
, {-65, -15, -53}
, {-54, -34, -11}
, {-83, 61, -22}
, {-3, -23, -9}
, {-24, -49, -2}
, {-17, -70, -86}
, {-17, 0, 10}
, {-59, -76, -78}
, {-36, -65, -44}
, {-43, -11, -31}
, {-56, -13, 46}
, {-7, 0, -80}
, {-19, 30, -41}
, {-34, -86, -53}
, {5, 2, -40}
, {-56, -12, -47}
, {-50, 10, 23}
, {-37, 36, -3}
, {-69, 26, 9}
, {35, -27, 30}
, {-64, -44, 1}
, {-57, -24, -19}
, {-22, -12, 10}
, {-33, 10, -32}
, {-79, -53, -13}
, {-40, -24, -8}
, {50, -75, -58}
, {-33, -31, -61}
, {18, 24, -54}
, {-45, -15, -48}
, {-27, -27, 29}
, {-60, 32, 18}
, {-24, -43, -72}
}
, {{-34, 21, -32}
, {6, -86, -76}
, {-60, 22, -55}
, {-4, 9, -72}
, {-43, -19, -34}
, {14, 52, 43}
, {-14, -16, -13}
, {-75, -29, -73}
, {-6, 35, -113}
, {-34, -34, -92}
, {0, -35, -46}
, {-32, 73, 31}
, {-74, 17, -83}
, {19, 8, 25}
, {-73, -45, -21}
, {-74, 5, -96}
, {-48, -3, 21}
, {-45, 55, -15}
, {-46, -31, -8}
, {-7, -57, 16}
, {24, 109, 45}
, {2, 15, -81}
, {-17, 69, 16}
, {-58, -33, -14}
, {-77, -104, -117}
, {-17, -78, -15}
, {-100, 11, -82}
, {-61, -29, 3}
, {-84, -24, -26}
, {-35, -69, -2}
, {-94, -28, 4}
, {23, -20, -71}
, {-4, -100, -75}
, {33, -57, -100}
, {-95, 53, -61}
, {-47, -18, -28}
, {-46, -4, -20}
, {-90, -32, 5}
, {-63, 2, 53}
, {4, -65, -68}
, {27, -76, -28}
, {16, -165, 17}
, {20, -56, -32}
, {-67, 13, -41}
, {-81, 51, 10}
, {-7, 43, -40}
, {-32, -42, -70}
, {4, -13, 26}
, {0, -29, -24}
, {-32, -61, -36}
, {12, -70, -78}
, {-29, 3, -45}
, {-44, -20, -16}
, {-31, -16, -3}
, {27, -24, -22}
, {-5, -12, -7}
, {-48, -16, -25}
, {-66, -28, 41}
, {12, 66, -86}
, {52, 77, 26}
, {-101, -25, -4}
, {-45, 16, -89}
, {-3, 31, -93}
, {-9, -98, -50}
}
, {{-73, -41, -61}
, {-57, 29, 8}
, {-35, -67, 24}
, {6, -4, -19}
, {29, -61, -14}
, {-52, 18, 3}
, {3, 19, 49}
, {-53, 2, -93}
, {-32, -68, -34}
, {-73, 23, -65}
, {-82, -30, -83}
, {-2, -56, -31}
, {-58, -9, 21}
, {-75, -21, -20}
, {13, -93, -74}
, {-82, -45, 5}
, {26, 14, -12}
, {-36, -55, 0}
, {-62, -11, 29}
, {12, -28, -43}
, {-51, -5, 45}
, {-3, 0, -33}
, {-53, -25, 11}
, {47, -60, 0}
, {-46, -54, 18}
, {-69, 31, -22}
, {-48, 22, 13}
, {-87, -50, -65}
, {6, -64, -44}
, {-88, -69, 41}
, {-7, -68, -36}
, {19, -69, 28}
, {-10, -55, -52}
, {29, -73, -78}
, {-80, 6, -51}
, {-87, -35, -7}
, {-2, 9, -32}
, {-62, 34, -24}
, {-17, -42, -37}
, {-1, 6, 21}
, {-3, -21, 27}
, {-13, -13, -18}
, {-38, -74, 28}
, {8, -37, 8}
, {-21, 3, 41}
, {-12, -78, -25}
, {5, -87, 5}
, {-50, -82, -36}
, {-88, -8, -57}
, {9, -59, -53}
, {-14, -57, 32}
, {-74, -4, 5}
, {-46, -87, 12}
, {3, -34, 28}
, {-92, 12, 28}
, {-12, 17, -23}
, {-75, -25, -8}
, {-93, 4, -11}
, {5, 24, -20}
, {25, -67, -33}
, {-32, -56, 19}
, {22, -87, -25}
, {-44, -43, 31}
, {-16, -12, -42}
}
, {{165, -110, 46}
, {-96, 61, 71}
, {114, -221, 20}
, {-124, 77, 33}
, {-46, -80, -121}
, {49, 110, -44}
, {36, -36, 29}
, {-82, 13, 83}
, {54, -87, 67}
, {107, -49, -130}
, {-20, -23, 21}
, {-11, -172, -212}
, {-118, 101, 24}
, {38, -41, 10}
, {-92, 63, -30}
, {50, -302, 25}
, {115, -191, 9}
, {-72, -13, -55}
, {169, -244, -43}
, {-4, -27, -182}
, {-33, 192, -186}
, {17, -81, -6}
, {-68, 52, -67}
, {-20, -173, -57}
, {-5, -178, 45}
, {90, -17, 79}
, {-41, 0, 30}
, {177, -287, -82}
, {88, -86, -142}
, {215, -354, 181}
, {-6, 71, 103}
, {-80, -18, 6}
, {-56, -7, 70}
, {-70, -14, -60}
, {-65, 257, 38}
, {-128, 258, 133}
, {-119, 59, -145}
, {94, -182, -67}
, {-112, -100, -180}
, {-146, 0, -18}
, {33, 10, -196}
, {51, -393, 114}
, {107, 191, -229}
, {-3, -91, -150}
, {129, 99, -64}
, {10, -25, -107}
, {126, -147, 113}
, {-67, 106, -144}
, {-182, 129, 145}
, {-155, 225, 45}
, {147, -55, 38}
, {31, 232, 32}
, {-54, -152, 40}
, {22, 42, 108}
, {-126, 147, 141}
, {-36, 26, -98}
, {-54, 144, 133}
, {0, -77, -38}
, {28, 73, -60}
, {-25, 12, -215}
, {130, 145, -22}
, {-65, -32, -277}
, {83, 41, 110}
, {7, -8, -18}
}
, {{115, -35, 216}
, {-65, 111, 122}
, {147, -75, -104}
, {-80, 35, 11}
, {59, -99, -16}
, {121, 34, 125}
, {1, -20, 132}
, {64, -44, 147}
, {109, 21, 120}
, {26, 1, -6}
, {-131, -15, 53}
, {4, -154, 30}
, {-139, 79, 97}
, {-6, -90, 47}
, {-34, -69, -75}
, {4, -35, -23}
, {148, 72, 78}
, {98, 9, -17}
, {207, -53, 49}
, {139, 85, 30}
, {96, 87, -138}
, {137, 8, 68}
, {13, -94, -11}
, {128, 0, 72}
, {109, -98, 89}
, {95, 49, 80}
, {-62, 47, 109}
, {165, -8, -10}
, {68, -52, -108}
, {316, -9, 158}
, {-27, -23, 104}
, {133, -113, 95}
, {-61, 55, -49}
, {18, -60, 34}
, {-115, 68, 105}
, {-130, 134, 105}
, {-10, -69, 15}
, {164, -111, -35}
, {61, -91, 28}
, {-37, 89, 88}
, {-10, -50, -4}
, {195, 67, 222}
, {236, -74, -108}
, {78, -72, 91}
, {120, 128, 189}
, {111, -4, -44}
, {133, 27, 217}
, {61, -64, 5}
, {6, 165, 78}
, {-108, -26, -14}
, {91, 1, 37}
, {-80, 141, 173}
, {-39, 67, 70}
, {-102, 50, 108}
, {-26, 74, 61}
, {19, -40, -23}
, {-14, 114, 136}
, {82, -34, -96}
, {75, 91, 222}
, {-147, -25, 7}
, {62, 35, -21}
, {-72, -31, -72}
, {6, -21, 156}
, {-67, -43, -15}
}
, {{-199, -71, -32}
, {-151, -66, -82}
, {131, 139, -250}
, {91, 56, -118}
, {58, 23, 30}
, {114, 39, -77}
, {61, -40, -85}
, {-78, -78, -71}
, {-41, -50, -58}
, {-51, -147, -32}
, {-88, -82, 53}
, {150, 204, -262}
, {133, 49, -144}
, {2, -82, -6}
, {-7, 10, 3}
, {-70, 66, -165}
, {-74, 13, -13}
, {89, 126, -200}
, {-190, -14, -79}
, {94, 44, 121}
, {127, 39, 34}
, {-35, -126, -14}
, {132, 130, -197}
, {-117, 100, -48}
, {-123, -66, -100}
, {-146, -43, -75}
, {-88, 32, -7}
, {-34, 98, 70}
, {106, 139, -211}
, {24, 41, -237}
, {112, 82, -163}
, {-27, 90, -73}
, {-79, -48, 0}
, {-25, -35, 12}
, {11, -64, 0}
, {-64, -89, 15}
, {74, 47, 9}
, {-72, 14, 31}
, {210, 181, -225}
, {-120, -66, 1}
, {136, 50, 93}
, {-84, 61, -108}
, {17, 85, 39}
, {95, 91, -78}
, {113, 81, 40}
, {62, -83, -54}
, {-131, -25, -184}
, {93, -22, 46}
, {246, 43, -97}
, {48, -33, -34}
, {-28, -68, -130}
, {14, -40, -75}
, {-128, -62, -23}
, {-29, 0, 23}
, {165, -63, -134}
, {101, 161, -292}
, {62, -99, -137}
, {65, 102, -242}
, {172, 62, 28}
, {218, 138, -10}
, {73, -126, -88}
, {181, 53, -124}
, {-19, -66, -161}
, {-52, 42, -40}
}
, {{-120, 8, -112}
, {50, 52, 0}
, {-57, 20, 158}
, {-65, -28, -72}
, {-39, -23, 9}
, {-151, -32, -11}
, {-41, 34, -44}
, {-58, -45, -65}
, {-20, 78, 123}
, {-19, 11, -12}
, {78, 95, 34}
, {-37, 86, 144}
, {12, -58, -121}
, {10, -32, 20}
, {-12, -52, 14}
, {-83, -61, -108}
, {26, -18, -70}
, {-46, 93, 48}
, {-56, 3, -119}
, {-146, -20, 29}
, {-164, -68, -26}
, {7, -10, 72}
, {-95, -34, 77}
, {-80, -100, -72}
, {-82, 2, -114}
, {16, -53, 0}
, {61, 7, -4}
, {-69, -80, -44}
, {4, 67, 56}
, {-84, -9, 73}
, {-150, 21, 117}
, {-31, -6, -18}
, {75, 43, -30}
, {-41, -43, -49}
, {-9, -53, -98}
, {37, -1, -111}
, {-128, -55, -99}
, {-123, 8, -83}
, {-26, 94, 121}
, {16, 45, -65}
, {-43, 65, -20}
, {-94, -14, -57}
, {-96, -7, -69}
, {14, 11, -22}
, {-149, 54, -8}
, {-19, 99, 68}
, {-55, -3, -98}
, {-72, -28, -100}
, {-94, 8, 3}
, {90, -53, -92}
, {-108, 11, -47}
, {20, -44, -83}
, {18, 32, -5}
, {-6, 30, -14}
, {-19, -21, -24}
, {-38, 101, 150}
, {-8, 45, 24}
, {-161, 10, 53}
, {-114, -13, 29}
, {-94, 59, -50}
, {49, 72, 79}
, {-29, 32, -9}
, {60, 78, -6}
, {-9, 46, -61}
}
, {{61, 40, 29}
, {-104, 15, -18}
, {-118, -150, -160}
, {-21, 135, 176}
, {19, 16, 24}
, {1, -119, -126}
, {-137, -18, -45}
, {38, 107, 199}
, {-148, -10, 18}
, {-4, -25, 29}
, {2, -56, 24}
, {-169, -121, -95}
, {98, 75, 96}
, {0, -10, 77}
, {42, 49, 3}
, {39, 42, 108}
, {25, 17, -6}
, {-56, -46, -74}
, {19, 39, -97}
, {-82, -157, -84}
, {-132, 116, -35}
, {-53, 12, 52}
, {-113, -112, -93}
, {-54, 65, 163}
, {11, 138, 79}
, {-16, -8, 86}
, {-54, -76, 8}
, {-11, 0, -68}
, {-88, -141, -182}
, {-116, -242, -116}
, {-115, -175, -107}
, {62, 161, 159}
, {-14, -18, 55}
, {86, 53, 78}
, {-90, 104, 29}
, {-264, -167, -202}
, {-40, 180, 91}
, {54, 73, -57}
, {-129, -19, -92}
, {-90, 55, 76}
, {39, -99, -40}
, {-92, -157, -172}
, {-60, 36, 132}
, {-68, 94, -90}
, {-132, -170, -52}
, {-39, 56, -76}
, {48, 154, 134}
, {19, 89, 105}
, {-42, -16, -43}
, {-39, 17, 45}
, {97, 114, 172}
, {-37, 44, 60}
, {46, 55, 5}
, {-56, 46, -50}
, {-29, 24, 38}
, {-188, -50, -123}
, {-204, -232, -137}
, {-65, -131, -24}
, {94, -11, -33}
, {-38, -54, 57}
, {-156, -73, -117}
, {-210, -64, -118}
, {-135, 88, 21}
, {-66, -38, 24}
}
, {{99, 1, 166}
, {-34, 49, -55}
, {-210, 105, 55}
, {37, 34, 53}
, {13, 51, -19}
, {-163, -41, 3}
, {-15, 44, 104}
, {-17, 36, -2}
, {-93, 94, 11}
, {47, 82, -23}
, {34, 33, -54}
, {-105, 96, 159}
, {69, 109, 125}
, {-25, 91, -54}
, {80, 89, 9}
, {-14, 8, 40}
, {-30, 152, -94}
, {-180, 42, -7}
, {10, 62, -101}
, {-238, 29, 168}
, {-66, 46, 102}
, {2, 16, 63}
, {-177, 34, 79}
, {-5, -67, 71}
, {12, 83, -50}
, {-1, 123, 5}
, {6, 94, -16}
, {86, 26, -22}
, {-68, 58, 11}
, {-149, -42, -3}
, {-197, -5, 9}
, {24, 65, -47}
, {-36, 33, -29}
, {-35, -19, -19}
, {53, 29, 144}
, {4, -46, -267}
, {-33, -19, 29}
, {-2, 39, 55}
, {-130, 45, 64}
, {0, 47, -107}
, {28, 40, 49}
, {-143, -17, -37}
, {-61, 1, 128}
, {30, -3, 138}
, {-71, -19, 142}
, {-86, 21, 75}
, {-24, 60, -12}
, {-4, -14, -2}
, {53, -67, 77}
, {29, 73, 68}
, {-28, 59, -28}
, {73, 31, -5}
, {15, 55, -50}
, {25, -21, -41}
, {32, -15, -14}
, {-228, -22, 105}
, {-103, -29, 55}
, {-159, -52, 44}
, {22, -98, 24}
, {53, 50, 186}
, {-53, 110, 5}
, {15, 12, 27}
, {34, 53, 77}
, {-20, 26, -52}
}
, {{0, -117, -87}
, {-15, -7, -100}
, {45, 54, 46}
, {46, -5, 54}
, {-12, 17, -7}
, {64, -27, -112}
, {-41, -43, -138}
, {58, 40, -52}
, {-24, -22, -183}
, {10, 0, -33}
, {3, -68, -60}
, {114, 33, -21}
, {15, -17, 9}
, {-49, 0, -20}
, {-84, 2, -51}
, {-13, 36, 108}
, {-25, -91, -75}
, {120, 48, -87}
, {-44, -53, -92}
, {-107, -61, -33}
, {31, -100, 1}
, {-19, -12, -97}
, {84, 27, -4}
, {-37, -42, 50}
, {-15, -66, -34}
, {23, -111, -129}
, {-83, -51, -102}
, {-24, -50, -30}
, {93, 36, 108}
, {5, -2, 0}
, {45, -35, -202}
, {-5, 69, -37}
, {25, -54, -54}
, {-15, 36, -70}
, {-13, -54, -87}
, {-113, -118, -149}
, {-7, 32, 11}
, {10, 7, -45}
, {158, 8, 43}
, {-14, -87, -126}
, {-43, 47, 23}
, {-92, -56, -24}
, {-77, 34, -47}
, {-31, -67, -108}
, {-102, -80, -113}
, {131, -18, 2}
, {-10, -101, -63}
, {51, -53, -74}
, {-22, -98, -44}
, {-62, 4, -110}
, {1, -35, -4}
, {-24, -49, -144}
, {-28, -102, -17}
, {50, -50, -81}
, {-8, -1, -38}
, {99, -34, 31}
, {-14, -61, -120}
, {67, 25, -50}
, {-131, -34, -101}
, {-40, -94, -66}
, {6, 45, -66}
, {58, 25, 51}
, {112, -3, -181}
, {-80, 21, 12}
}
, {{-32, 3, -12}
, {46, -53, -78}
, {-20, -6, -38}
, {-31, 70, 92}
, {-2, 55, 4}
, {-139, -38, -82}
, {-80, -74, -116}
, {-41, 18, -1}
, {-69, -102, -84}
, {46, 12, -28}
, {22, -37, 52}
, {-62, -57, -70}
, {60, -16, -42}
, {-25, 21, 26}
, {18, 63, -35}
, {31, 114, 154}
, {56, -46, -13}
, {-110, 65, -83}
, {101, 10, -15}
, {-166, 48, -3}
, {-78, 47, -41}
, {66, 20, -86}
, {-61, -37, -98}
, {5, 47, -31}
, {83, 32, 21}
, {21, -54, -26}
, {28, -29, 14}
, {-17, 35, 87}
, {-16, -46, -81}
, {-25, -23, -127}
, {-62, -106, -6}
, {-27, 50, -31}
, {22, 52, 24}
, {80, 43, 50}
, {-27, 3, -10}
, {-185, -109, -84}
, {3, 120, 50}
, {26, 21, 81}
, {-105, -42, 0}
, {-27, 44, -29}
, {44, 68, 73}
, {-30, 0, 11}
, {-14, 0, -34}
, {-26, 15, -14}
, {-74, -167, -31}
, {-40, 16, -73}
, {90, -30, 10}
, {79, 43, 117}
, {33, 19, -58}
, {23, 12, 3}
, {73, 65, 94}
, {-47, -13, -53}
, {60, 34, -45}
, {-69, -124, -104}
, {-57, -39, 44}
, {-93, -25, -75}
, {-100, -104, -81}
, {-51, -7, -111}
, {-93, -6, -64}
, {-136, -62, -47}
, {-103, -96, -123}
, {-19, -24, -122}
, {-36, -38, -128}
, {23, -5, 44}
}
, {{-29, -78, 25}
, {-36, -19, -45}
, {3, 37, -36}
, {30, -53, -59}
, {4, 28, -83}
, {6, -22, 22}
, {-86, 43, -61}
, {-64, -7, -84}
, {27, 14, -5}
, {-23, -40, -76}
, {-69, -28, 10}
, {-89, -48, -56}
, {56, 20, -2}
, {-29, 9, 6}
, {-12, 13, 19}
, {-62, -49, -35}
, {-37, -74, -50}
, {-21, -45, -17}
, {-34, -44, -76}
, {-86, -8, 14}
, {8, -49, 22}
, {57, -19, 17}
, {-41, -51, 2}
, {17, -56, -91}
, {-32, 9, 24}
, {1, -56, -30}
, {-89, -23, -44}
, {-12, -14, 23}
, {22, 5, -22}
, {-53, 46, 25}
, {23, -53, -30}
, {6, 10, -84}
, {-62, -75, -41}
, {0, -19, -25}
, {-13, -63, -75}
, {-55, 17, 8}
, {-27, -53, -29}
, {29, -41, 20}
, {12, -8, 0}
, {-38, -73, -59}
, {-26, -73, -82}
, {23, -27, -57}
, {-74, -50, -56}
, {-5, -51, -7}
, {-17, 16, 61}
, {-70, 47, 42}
, {14, 24, -62}
, {19, -40, 32}
, {28, 54, 63}
, {-31, -56, 9}
, {-79, -57, -59}
, {19, -23, -49}
, {32, -78, -76}
, {-26, -8, 19}
, {15, -11, -12}
, {-43, -62, -17}
, {-60, -50, 55}
, {-77, 41, 50}
, {-1, 56, -47}
, {-81, -37, -43}
, {1, 6, -85}
, {-18, -27, 3}
, {-58, -93, 33}
, {-42, -31, 4}
}
, {{-57, -15, -15}
, {-8, 54, -86}
, {-65, 73, 55}
, {47, 35, 85}
, {25, 37, -77}
, {-172, -10, -43}
, {-84, -6, 3}
, {41, 101, 42}
, {-132, 81, 10}
, {-45, 45, 49}
, {42, 44, -21}
, {-183, 128, 31}
, {-21, 70, 188}
, {52, 53, -70}
, {1, 59, -77}
, {53, 52, 70}
, {-24, -14, -107}
, {-144, 49, 53}
, {9, 35, -116}
, {-258, -73, 111}
, {-123, 39, 116}
, {0, 15, 54}
, {-258, 5, -22}
, {25, -38, -22}
, {35, 53, -49}
, {9, 81, 19}
, {-37, 26, -21}
, {7, 9, 17}
, {-139, 22, 45}
, {-119, -47, -39}
, {-168, 17, -53}
, {-22, 112, -34}
, {21, -33, -104}
, {-50, 44, 40}
, {13, 12, 84}
, {-57, -28, -287}
, {0, 97, -36}
, {-33, 41, -28}
, {-142, 52, 79}
, {46, -34, -59}
, {34, -40, 1}
, {-144, -69, -42}
, {-44, 16, 75}
, {-80, -15, 21}
, {-231, -21, 96}
, {-50, 118, 66}
, {7, 33, -5}
, {78, -35, 46}
, {23, -44, 72}
, {29, 12, 122}
, {71, -1, 99}
, {6, -50, 71}
, {35, -23, -48}
, {-90, 12, 9}
, {4, -15, 61}
, {-132, -24, -2}
, {-81, -11, -56}
, {-190, 32, 40}
, {23, -123, -40}
, {-16, -14, 112}
, {-44, 107, 58}
, {87, -27, 29}
, {-52, 54, 109}
, {49, -15, -2}
}
, {{-99, 62, 69}
, {-63, -77, 7}
, {102, 117, -229}
, {35, -23, -18}
, {49, 97, 12}
, {100, 9, -43}
, {29, -43, -149}
, {-110, -38, -74}
, {-5, -7, -56}
, {-65, -97, 15}
, {40, -40, -13}
, {91, 98, -122}
, {-21, -85, -132}
, {-18, 18, 15}
, {13, -8, 48}
, {-148, 52, -113}
, {-62, 74, -45}
, {132, 26, -196}
, {-113, 6, 9}
, {175, 39, 1}
, {119, 0, -29}
, {-51, -46, -5}
, {108, 167, -141}
, {-56, 106, -49}
, {-117, -95, -145}
, {-25, -42, -125}
, {-86, 9, -58}
, {-5, 82, 55}
, {6, 156, -64}
, {-25, -11, -265}
, {12, 42, -28}
, {-81, -21, -98}
, {-15, 5, -3}
, {20, 49, 11}
, {-21, -139, -39}
, {-22, -103, -136}
, {-36, -31, -34}
, {-54, 87, 71}
, {127, 179, -103}
, {11, -49, 34}
, {98, 29, -31}
, {-12, -26, -120}
, {-58, -61, 33}
, {40, 30, 11}
, {159, 55, -94}
, {-13, -32, -112}
, {-213, -40, -110}
, {73, 3, 64}
, {71, -65, -50}
, {-2, -81, 50}
, {-101, -35, -74}
, {-17, -53, -24}
, {-86, -23, -109}
, {32, -57, -70}
, {111, -48, -69}
, {167, 39, -91}
, {148, -104, -116}
, {125, 122, -283}
, {243, 23, -59}
, {155, 29, -116}
, {48, -92, -176}
, {132, 0, -132}
, {-35, -101, -80}
, {-9, 19, 53}
}
, {{12, 19, 24}
, {136, 24, 116}
, {-161, -126, 3}
, {-1, -115, -124}
, {38, -18, -31}
, {-102, -92, -136}
, {-35, 28, 21}
, {39, 0, 169}
, {69, 41, 73}
, {45, -72, -49}
, {121, 88, 142}
, {-232, -146, -158}
, {-103, -33, -164}
, {-16, 29, 34}
, {25, 31, 7}
, {43, 40, 13}
, {13, 6, 62}
, {-77, -152, -180}
, {26, -61, 47}
, {-272, -283, -172}
, {-60, -105, -113}
, {-52, -53, 50}
, {-51, -235, -169}
, {-49, -16, 23}
, {-11, 1, -27}
, {43, 0, 59}
, {25, 43, 84}
, {17, -43, -66}
, {-67, -119, -102}
, {-43, -139, 34}
, {-124, -154, -28}
, {-45, -7, 29}
, {82, 72, 149}
, {26, -55, 42}
, {-65, 13, -73}
, {15, -26, -77}
, {31, -94, -1}
, {2, -47, 0}
, {-69, -18, -259}
, {83, -18, 145}
, {-85, -27, -3}
, {-90, -72, -56}
, {-2, -156, -86}
, {-109, 7, -81}
, {-103, -139, -73}
, {-92, -87, -158}
, {-111, 7, -51}
, {-14, -91, 45}
, {-105, -8, -157}
, {-126, -67, -50}
, {-8, -21, 45}
, {14, 72, 35}
, {76, 44, 125}
, {11, 4, 105}
, {-62, 26, -90}
, {-143, -113, -220}
, {-99, -130, -228}
, {-163, -94, -27}
, {-84, -17, -148}
, {-169, -126, -263}
, {5, -35, -3}
, {-160, -88, -284}
, {90, 47, 116}
, {37, 8, 116}
}
, {{58, -21, 23}
, {-28, -65, -56}
, {-42, -42, -12}
, {-17, -64, -32}
, {43, 29, -58}
, {-75, 0, 19}
, {-81, 16, -75}
, {-96, -93, -99}
, {-34, 38, -41}
, {-71, -41, -27}
, {65, -5, 79}
, {28, -119, -92}
, {-147, -144, -104}
, {-65, 5, 16}
, {-41, 1, -43}
, {-71, -28, -92}
, {57, -7, -33}
, {8, 45, -74}
, {79, 15, -3}
, {69, -135, -121}
, {56, -17, -62}
, {25, -19, -10}
, {-105, -30, -39}
, {-70, -3, -99}
, {-105, -38, -71}
, {-34, 18, -26}
, {30, 47, -35}
, {-8, 43, -42}
, {-14, -54, 3}
, {95, -25, -31}
, {43, 11, 83}
, {-41, -39, 41}
, {77, 13, -16}
, {-41, 25, -103}
, {-88, -5, 7}
, {12, -18, -40}
, {-18, -46, -36}
, {39, 42, 33}
, {-60, -20, -72}
, {-14, -8, 44}
, {64, 43, 1}
, {-2, 49, -151}
, {6, -73, 13}
, {21, 5, -51}
, {-10, -71, -152}
, {-125, 7, -24}
, {-156, -141, -179}
, {-32, -34, -44}
, {-63, -22, -38}
, {5, 8, -31}
, {-142, -45, -150}
, {-93, -65, -97}
, {8, -57, 42}
, {-4, -25, 2}
, {-35, -26, -69}
, {-51, 72, -73}
, {52, -43, -56}
, {-19, -40, -26}
, {-91, -36, -219}
, {-102, -56, -152}
, {-6, 42, -42}
, {-97, -93, -44}
, {-55, 17, -21}
, {12, 46, 1}
}
, {{-27, -70, 10}
, {-33, -78, -13}
, {-39, -22, 106}
, {-44, -45, -61}
, {-34, 60, 22}
, {-46, 5, -49}
, {-100, 3, -30}
, {-105, -35, -35}
, {-112, -149, -74}
, {21, 70, -42}
, {-33, -31, 39}
, {-75, 22, -89}
, {37, -23, -98}
, {24, -53, -12}
, {-45, -14, 4}
, {-10, 52, 86}
, {18, 57, -27}
, {-52, 23, 6}
, {-84, -13, 26}
, {-147, -125, -23}
, {-40, 6, -88}
, {-58, -61, -77}
, {-21, 58, -52}
, {-35, 49, -51}
, {-104, -17, -82}
, {37, 23, -66}
, {-40, -20, 11}
, {-4, 54, 40}
, {-62, -37, -27}
, {-195, 87, 144}
, {-73, -26, -130}
, {43, -42, 1}
, {-45, -12, -5}
, {-30, -27, -24}
, {30, -57, 11}
, {-40, -118, -164}
, {14, -86, -59}
, {19, 1, -64}
, {-17, -52, -162}
, {77, 36, 5}
, {-28, 58, 40}
, {-156, 81, 159}
, {33, -19, -14}
, {69, 23, -9}
, {-83, -169, -217}
, {-6, -34, -40}
, {-94, -35, -41}
, {35, -2, 22}
, {-1, -38, -3}
, {-4, -53, 11}
, {-14, -53, -12}
, {-41, -130, -100}
, {13, 21, 30}
, {-55, -69, -123}
, {-52, -35, -18}
, {-47, 7, -89}
, {-112, -141, -37}
, {-20, 23, 4}
, {-68, -47, -65}
, {-123, -32, -141}
, {-46, -48, -22}
, {3, 64, -143}
, {-13, -120, -109}
, {46, 13, -70}
}
, {{107, -73, 100}
, {-22, 136, 32}
, {-32, -133, -96}
, {32, 141, 56}
, {-59, 1, 11}
, {-174, 12, -103}
, {42, -97, 58}
, {-27, 69, 164}
, {-132, -4, 89}
, {16, 19, 20}
, {-28, 71, 0}
, {-108, 3, 1}
, {20, 84, 178}
, {4, 34, 49}
, {-31, 34, -52}
, {79, 66, 42}
, {41, 58, -67}
, {-129, 36, -73}
, {-24, 15, -48}
, {-1, 81, -132}
, {49, 30, 17}
, {34, 42, -53}
, {-222, -216, -15}
, {55, 100, -4}
, {48, 138, -21}
, {-30, 100, 106}
, {8, 79, 94}
, {11, -46, 18}
, {-101, -71, -31}
, {-75, -127, -93}
, {-170, -163, -79}
, {57, 57, 71}
, {-7, 40, -49}
, {12, 26, -35}
, {-59, 0, 101}
, {-4, -68, -102}
, {44, 141, 45}
, {34, 24, 22}
, {-113, -141, -8}
, {19, 33, -45}
, {-73, 9, -1}
, {7, -43, -208}
, {-78, 53, 170}
, {-52, -24, -22}
, {-66, -68, 58}
, {-60, -21, 39}
, {32, 173, 19}
, {68, 95, -58}
, {44, -65, -25}
, {58, 42, 75}
, {72, 151, 58}
, {55, 92, 52}
, {-18, 38, 52}
, {-51, -60, 19}
, {69, -40, 11}
, {-152, -119, -16}
, {-30, -83, -12}
, {-96, -100, -86}
, {48, 27, -25}
, {-6, -16, 139}
, {-58, 62, 35}
, {83, -117, 15}
, {-49, 105, 82}
, {25, 68, -12}
}
, {{-2, 45, -9}
, {8, 4, -44}
, {45, -45, -41}
, {8, -2, 41}
, {-34, 58, -12}
, {-56, -32, -55}
, {38, -19, -6}
, {6, 16, 18}
, {-36, 37, 40}
, {-48, 63, 55}
, {-43, -44, -19}
, {-59, -5, -23}
, {-32, 39, -38}
, {27, 40, -8}
, {-9, -57, 30}
, {13, -53, -25}
, {2, -53, -9}
, {6, -33, -37}
, {-20, 8, -9}
, {12, -27, -3}
, {25, -60, 17}
, {37, 30, -51}
, {-59, -45, -47}
, {54, -4, -44}
, {-26, -9, -61}
, {-33, -40, -34}
, {62, -15, -57}
, {12, -15, 38}
, {-17, 10, -7}
, {-63, -6, -22}
, {53, -1, 31}
, {-44, -33, -12}
, {-28, -38, 0}
, {-29, -17, 54}
, {-13, 34, -37}
, {42, -40, -37}
, {50, -25, 15}
, {-56, -13, 54}
, {-17, 20, 61}
, {37, 33, 43}
, {-41, 8, 22}
, {23, -26, 14}
, {-53, -8, 51}
, {48, 12, 3}
, {58, -50, 47}
, {63, -36, 36}
, {53, -20, -22}
, {-29, -3, -46}
, {-4, -43, -19}
, {-22, -34, 51}
, {-25, 4, -36}
, {-48, 33, -43}
, {27, 26, 50}
, {53, -40, -41}
, {-26, 34, -53}
, {31, 43, -33}
, {9, -37, -62}
, {5, 54, 6}
, {54, -63, -4}
, {-17, 41, -58}
, {42, -39, 0}
, {-27, -37, 39}
, {-35, 36, -44}
, {-46, -41, -62}
}
, {{-15, -10, -14}
, {-23, -5, -88}
, {33, 42, -22}
, {-26, -86, -20}
, {0, 21, 24}
, {-84, -53, -53}
, {-42, -11, -10}
, {0, -16, -22}
, {-50, 12, -44}
, {-39, -9, -77}
, {-61, -43, -76}
, {-86, 42, -60}
, {-82, -43, 40}
, {-48, -58, -32}
, {-92, -14, 20}
, {-83, -48, -81}
, {-63, -17, -46}
, {-59, -48, 15}
, {61, -24, -43}
, {-51, -76, -13}
, {1, -41, -18}
, {33, -60, 4}
, {-93, -36, 57}
, {-43, -52, 8}
, {-39, -53, -46}
, {-4, -88, 0}
, {-79, 29, -38}
, {-48, -57, 47}
, {-79, 63, 38}
, {-81, -57, -1}
, {-9, 47, -41}
, {-42, -85, 23}
, {27, 14, -57}
, {34, 27, -60}
, {8, -87, -80}
, {-57, -12, -48}
, {-82, -49, 28}
, {-28, 20, 52}
, {-39, 24, -36}
, {-84, 3, 32}
, {-46, 12, -35}
, {-10, -40, 44}
, {15, 14, -32}
, {-36, 0, 21}
, {-91, 31, -23}
, {-86, -52, -20}
, {3, -39, 51}
, {-8, -55, -32}
, {-81, -73, 7}
, {-26, -62, -15}
, {-54, -59, -59}
, {-48, -10, -7}
, {19, -23, -86}
, {10, -27, -29}
, {-75, -42, 26}
, {15, 55, -49}
, {-44, -52, -5}
, {30, 44, 17}
, {-73, -40, 59}
, {-67, -26, -23}
, {-65, -28, 44}
, {23, 35, -21}
, {32, -71, -16}
, {-38, 11, -58}
}
, {{-17, -92, -91}
, {28, 38, 48}
, {-5, 15, -200}
, {-38, 41, 11}
, {-67, 22, -3}
, {-30, 47, 21}
, {10, -8, -47}
, {-27, 24, -20}
, {61, 21, -11}
, {19, 12, -79}
, {-31, 43, 48}
, {-191, -125, -115}
, {-77, -95, -43}
, {22, 49, -54}
, {-32, -15, 46}
, {-42, 78, -80}
, {35, 19, -8}
, {-120, -16, -95}
, {-28, -34, -14}
, {-116, -16, -66}
, {-41, -53, -23}
, {25, 14, -51}
, {-4, 61, 26}
, {-38, -34, -70}
, {37, 9, -5}
, {-13, -58, -53}
, {-21, -48, 48}
, {30, -69, 28}
, {-8, 55, -149}
, {88, -90, -158}
, {99, 125, -44}
, {-50, 69, 21}
, {12, 10, -32}
, {73, 30, -31}
, {-104, 5, 69}
, {-73, 6, 7}
, {-37, 20, -11}
, {11, -31, -98}
, {-160, -36, -35}
, {60, 25, 37}
, {-34, -32, -35}
, {41, -115, -49}
, {-58, 66, 27}
, {-5, 5, -79}
, {-239, -83, -92}
, {-35, 61, -131}
, {76, 0, -26}
, {30, 13, 69}
, {-56, -159, 0}
, {-43, -90, 16}
, {49, -58, 0}
, {-95, 71, -25}
, {55, -41, -75}
, {26, -67, -123}
, {-98, -71, -46}
, {-149, 23, -2}
, {-214, -18, 38}
, {134, -14, -136}
, {-167, -34, 42}
, {-157, -43, -161}
, {16, -20, -62}
, {-44, 42, -76}
, {46, 17, -8}
, {-51, -48, -44}
}
, {{26, 3, 15}
, {-89, -78, -38}
, {-55, -61, 36}
, {4, -43, -63}
, {-43, -82, -16}
, {-49, 96, 28}
, {-21, -30, -37}
, {-90, -80, 17}
, {-6, -10, -6}
, {-87, 19, -35}
, {-7, 0, -38}
, {-5, 43, -44}
, {-21, -14, -65}
, {27, -8, -30}
, {-15, -99, -33}
, {8, -65, -2}
, {17, -79, -96}
, {-42, 41, 38}
, {-2, -85, -92}
, {-8, -3, -25}
, {-29, 1, -89}
, {-42, -40, 23}
, {-50, -1, -18}
, {-15, 20, -79}
, {13, -11, -82}
, {17, -5, -78}
, {15, -100, -34}
, {27, -28, -36}
, {58, 30, -48}
, {-42, 18, -11}
, {-5, 74, 13}
, {3, -86, -46}
, {-7, -86, -6}
, {-49, -4, -89}
, {-89, -69, 15}
, {18, -6, -76}
, {-42, -67, -20}
, {-6, -36, -82}
, {-8, -20, 5}
, {-33, -64, -90}
, {-42, -43, -33}
, {-5, -40, 21}
, {21, -6, -7}
, {-17, -31, -97}
, {-6, -24, -24}
, {61, -8, -33}
, {-25, -22, -62}
, {-22, -59, -6}
, {-78, -64, -30}
, {-63, -37, 34}
, {-40, -17, -27}
, {24, -72, 19}
, {-3, 12, 6}
, {-75, 18, -65}
, {-7, -3, -83}
, {-29, 62, 17}
, {-29, -40, 21}
, {53, -60, 14}
, {-63, 23, -65}
, {-5, -60, 5}
, {58, -6, 44}
, {28, -29, -37}
, {79, -33, -56}
, {-25, -57, -32}
}
, {{-99, 95, 167}
, {-55, -8, -182}
, {32, -56, 27}
, {53, -75, -234}
, {-83, 59, 54}
, {-60, -155, -59}
, {-42, -36, -193}
, {-105, -63, -90}
, {-53, -15, -55}
, {-136, -39, 78}
, {-77, -9, -47}
, {89, 82, 80}
, {0, -129, -99}
, {-160, -7, 27}
, {-15, -55, 29}
, {-137, 2, 118}
, {-159, 42, 144}
, {54, 37, 108}
, {-163, 16, 74}
, {228, 72, 206}
, {180, -105, -200}
, {34, 36, 108}
, {38, 20, 50}
, {-94, 24, 66}
, {-68, -60, 23}
, {-88, 56, -21}
, {6, -86, -107}
, {4, 89, 67}
, {43, -84, 123}
, {106, -4, 74}
, {-65, -96, -103}
, {11, -107, -151}
, {-18, -59, -63}
, {-125, -26, 71}
, {153, -42, -256}
, {81, -105, -190}
, {64, -28, -40}
, {-64, 63, 175}
, {60, 20, 95}
, {-33, 4, -35}
, {36, -48, -53}
, {55, 167, 39}
, {224, -87, -57}
, {71, -37, 127}
, {268, 27, 137}
, {9, -90, 107}
, {-122, -9, 41}
, {145, 56, 21}
, {94, 47, 8}
, {224, -27, -55}
, {-172, -56, 86}
, {128, -85, -87}
, {-158, -72, 2}
, {-50, -33, -115}
, {27, -67, -1}
, {-30, 25, 93}
, {85, -90, -138}
, {-15, -84, 78}
, {137, 114, 150}
, {59, -113, 94}
, {23, -124, 21}
, {7, -101, 57}
, {-91, -78, -42}
, {-81, -12, -28}
}
, {{39, -35, 17}
, {40, 37, 25}
, {-71, -132, -35}
, {71, -1, 104}
, {28, 60, -58}
, {-7, -26, -39}
, {-93, -5, 175}
, {63, 61, 144}
, {-76, 159, 150}
, {28, 55, 34}
, {-72, 68, -17}
, {62, -1, -71}
, {23, 103, 80}
, {-38, -7, 6}
, {-40, 69, 4}
, {39, -56, -28}
, {-4, 110, 32}
, {-4, -36, -21}
, {-17, 53, -139}
, {-27, 153, -180}
, {85, 126, 43}
, {-61, 56, 87}
, {19, -153, 26}
, {-16, 52, 89}
, {-68, 35, 14}
, {-10, 112, 58}
, {-62, 93, 101}
, {21, 22, -86}
, {-41, -139, -83}
, {-48, -160, -158}
, {-44, -102, -36}
, {-23, 40, 61}
, {-77, 72, 4}
, {-3, 86, 37}
, {-78, 26, 148}
, {-34, -115, -72}
, {65, 118, 28}
, {21, 49, -54}
, {85, -79, 14}
, {-6, 62, -18}
, {7, 43, -15}
, {-74, -87, -218}
, {10, 90, 151}
, {57, 84, -2}
, {-33, -14, -47}
, {-66, 56, 59}
, {-47, 76, 77}
, {53, 41, -23}
, {5, -32, 14}
, {151, 128, -22}
, {65, 94, -14}
, {38, 48, 87}
, {6, 70, 28}
, {5, 35, 127}
, {-54, -36, -29}
, {-74, -107, -64}
, {-30, -155, 44}
, {-77, -78, -22}
, {17, 5, -38}
, {99, 22, 81}
, {-130, -21, 87}
, {-78, -66, -11}
, {-169, 67, 149}
, {0, 36, 32}
}
, {{-4, -12, -85}
, {42, 44, -14}
, {-120, 108, 178}
, {-157, -36, -34}
, {-76, -32, -206}
, {-238, -70, 3}
, {-50, 82, 42}
, {-54, 24, -106}
, {89, 112, 16}
, {9, 65, 5}
, {19, 23, -113}
, {-53, -12, 150}
, {-120, 24, 15}
, {46, 88, -102}
, {-18, -36, -119}
, {23, -33, 20}
, {77, -28, -63}
, {-177, -22, 89}
, {-31, -24, -93}
, {-338, -195, -38}
, {-257, 45, -80}
, {56, 52, 92}
, {-353, -35, 143}
, {0, 22, -70}
, {-72, -41, 8}
, {77, -12, -7}
, {24, 125, -110}
, {-103, -15, -202}
, {-187, 68, 88}
, {21, 39, 101}
, {-236, 97, 63}
, {-71, 12, -120}
, {117, 89, -71}
, {-15, -41, -129}
, {-61, 90, -46}
, {55, 118, -64}
, {-83, -74, -225}
, {4, -32, -72}
, {-82, 22, 235}
, {37, 41, -71}
, {-104, -39, -98}
, {-64, -5, 30}
, {-92, -102, -164}
, {-26, -5, 125}
, {-162, -48, -96}
, {-80, 79, 23}
, {-8, 73, -49}
, {-91, -144, -186}
, {-65, -107, 141}
, {-62, -20, -172}
, {40, -36, -84}
, {-20, 56, -119}
, {65, -6, -116}
, {55, 1, 14}
, {-83, 139, 73}
, {-222, 40, 171}
, {-59, 65, 62}
, {-189, 128, 134}
, {-114, -14, -136}
, {-119, 85, -28}
, {-45, 58, 135}
, {-88, 116, 111}
, {96, 83, 128}
, {-28, 53, -147}
}
, {{-38, -41, -91}
, {-43, 27, -22}
, {27, 29, -93}
, {12, 0, -76}
, {-71, -10, -53}
, {-53, -25, -60}
, {38, -39, -41}
, {-36, -70, 24}
, {-21, -87, -18}
, {12, 16, -41}
, {0, -62, -29}
, {55, -21, -15}
, {-61, -29, -30}
, {18, 31, 31}
, {-52, 20, -18}
, {-25, -91, -91}
, {-37, -17, -18}
, {-15, -36, -79}
, {-8, 47, 8}
, {-56, 23, 10}
, {54, -12, -92}
, {59, -64, -27}
, {-33, 40, -35}
, {-25, 3, -52}
, {-26, -39, 14}
, {-66, -19, -78}
, {10, -13, -66}
, {-10, 32, -29}
, {-53, -48, 16}
, {12, 9, -86}
, {12, -5, -40}
, {7, -12, -90}
, {-72, -75, 31}
, {47, -2, -27}
, {-90, -17, 9}
, {26, 0, -88}
, {21, -72, 27}
, {-59, -83, -44}
, {-36, -19, -25}
, {-48, -21, 24}
, {4, -87, -80}
, {-51, -46, -28}
, {-8, -47, -45}
, {-14, 17, -47}
, {0, -16, 32}
, {-5, 21, 25}
, {-56, 0, -35}
, {-61, -73, 6}
, {-21, -15, -65}
, {28, 5, -16}
, {30, -22, -24}
, {27, -86, 25}
, {-32, -91, 23}
, {-37, -88, -45}
, {-84, -66, -29}
, {-51, 18, -93}
, {-7, 21, -7}
, {24, -42, -5}
, {-31, 55, -11}
, {-21, 16, -69}
, {-42, -56, -66}
, {-22, -88, 15}
, {-70, -51, -90}
, {-69, -26, -58}
}
, {{104, -8, 8}
, {-80, -14, 16}
, {-135, -147, -61}
, {86, 182, 111}
, {-14, -39, -48}
, {-53, -7, 4}
, {-136, -82, 17}
, {-95, 134, 165}
, {-152, -42, -35}
, {41, -7, 30}
, {-17, -68, -2}
, {-46, -62, -234}
, {120, 134, 207}
, {-56, 2, 131}
, {-11, 82, -8}
, {-1, 161, 16}
, {-15, 57, -49}
, {-141, -58, -64}
, {-23, 142, -89}
, {54, 120, -173}
, {83, 157, 119}
, {-17, 48, 7}
, {-234, -147, -160}
, {-42, 82, 86}
, {64, 114, 119}
, {-49, 100, 107}
, {12, 28, 11}
, {46, 37, 7}
, {-80, -198, -115}
, {-131, -157, -93}
, {-222, -103, -45}
, {69, 142, 167}
, {-35, 14, 18}
, {122, 43, 76}
, {63, -16, 133}
, {27, -149, -238}
, {-36, 136, 61}
, {27, 55, 13}
, {-64, -112, -65}
, {-32, 23, -40}
, {18, 23, 120}
, {-99, -135, -159}
, {-48, 11, 108}
, {67, -11, -111}
, {-57, -57, 2}
, {-31, -9, 19}
, {116, 170, 84}
, {-12, 186, 89}
, {40, 69, -28}
, {17, -13, 62}
, {116, 62, 121}
, {18, 28, 39}
, {-58, 21, 61}
, {-151, -25, -19}
, {58, 21, 26}
, {-89, -155, -74}
, {28, -96, -106}
, {-149, -79, -153}
, {32, 0, -137}
, {90, -37, 109}
, {-183, -2, -64}
, {92, -83, -95}
, {-87, 51, 29}
, {27, -11, -62}
}
, {{12, 31, 33}
, {-17, -48, -7}
, {-41, -83, 61}
, {56, -57, 57}
, {-81, 27, -42}
, {-12, -8, -44}
, {-69, -90, -1}
, {11, 42, 11}
, {-46, 52, -11}
, {12, 33, 12}
, {-6, -8, -64}
, {33, -33, 2}
, {-5, -58, -22}
, {-86, 18, 15}
, {-69, -1, 0}
, {-76, -57, -68}
, {32, -35, -39}
, {16, -2, -7}
, {8, -77, -21}
, {-95, -42, -45}
, {-80, 1, -64}
, {-28, -77, 29}
, {-68, -8, 14}
, {-67, 18, -23}
, {1, -66, -66}
, {-5, 5, 54}
, {-10, 0, -22}
, {10, -16, 11}
, {7, 20, 96}
, {19, -58, 25}
, {-93, 10, -18}
, {-85, -58, -15}
, {-33, -64, -74}
, {5, -71, -100}
, {-40, 1, -19}
, {-11, 7, -33}
, {-27, 16, -28}
, {-39, -14, 30}
, {-56, 2, 4}
, {-92, 28, -29}
, {-68, -103, -80}
, {1, 18, -50}
, {-83, -70, -84}
, {-16, -77, 11}
, {-42, -17, -78}
, {-89, -64, -18}
, {-42, -47, -46}
, {-67, -9, -55}
, {-42, -64, -54}
, {20, 22, -36}
, {16, -16, -30}
, {-60, 71, 36}
, {-10, -64, -29}
, {-34, 74, 65}
, {-43, -57, 12}
, {-96, 17, 8}
, {-20, 12, 9}
, {-87, -82, -30}
, {-15, 12, -42}
, {-12, -62, -48}
, {-21, -32, 74}
, {-38, -17, 23}
, {-103, -83, -61}
, {26, -73, -53}
}
, {{-5, 138, 5}
, {9, -46, -89}
, {-13, 18, -37}
, {-46, -17, -79}
, {-15, 61, 79}
, {-116, -42, -40}
, {-88, -6, -70}
, {-83, -72, -151}
, {-114, -131, -99}
, {-19, -36, 32}
, {3, 65, 21}
, {48, -34, -41}
, {-72, -5, -154}
, {17, 18, -11}
, {29, 70, 77}
, {-55, 15, 61}
, {39, 67, 9}
, {44, -41, -71}
, {50, 10, 111}
, {-1, -36, -32}
, {-41, -51, -56}
, {-46, 87, -6}
, {2, -18, -131}
, {11, 106, -46}
, {0, -6, 76}
, {-66, -11, -84}
, {76, -20, -27}
, {37, 72, 28}
, {-85, -11, -148}
, {103, 198, 180}
, {-32, -30, -21}
, {3, -37, -41}
, {4, 27, -56}
, {39, -20, 0}
, {-7, -54, -129}
, {-24, -142, -9}
, {-79, 28, -30}
, {50, 108, 89}
, {-62, -80, -149}
, {62, -23, 38}
, {7, 112, 61}
, {121, 192, 187}
, {-53, -61, -47}
, {2, 26, 15}
, {-72, -49, -74}
, {-70, -39, 9}
, {35, -5, -11}
, {-14, 33, 35}
, {73, -16, -78}
, {39, -118, -17}
, {-27, 27, 1}
, {30, -20, -96}
, {37, -16, 60}
, {-2, -28, -32}
, {32, -71, -58}
, {80, 0, -77}
, {6, -6, -85}
, {15, -3, 1}
, {-122, -35, 102}
, {-60, -7, 0}
, {-32, 7, -80}
, {85, 22, -17}
, {-66, -181, -57}
, {82, 43, 39}
}
}
;

#undef INPUT_CHANNELS
#undef CONV_FILTERS
#undef CONV_KERNEL_SIZE
/**
  ******************************************************************************
  * @file    maxpool.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_CHANNELS  64
#define INPUT_SAMPLES   5
#define POOL_SIZE       4
#define POOL_STRIDE     4
#define POOL_PAD        0 // Unsupported
#define POOL_LENGTH	    ( ( (INPUT_SAMPLES - POOL_SIZE + (2*POOL_PAD) ) / POOL_STRIDE ) + 1 )

#define ACTIVATION_LINEAR

typedef number_t max_pooling1d_24_output_type[INPUT_CHANNELS][POOL_LENGTH];

static inline void max_pooling1d_24(
  const number_t input[INPUT_CHANNELS][INPUT_SAMPLES], 	    // IN
  number_t output[INPUT_CHANNELS][POOL_LENGTH]) {	// OUT

  unsigned short pos_x, k; 	// loop indexes for output volume
  unsigned int x;
  number_t max, tmp; 

  for (k = 0; k < INPUT_CHANNELS; k++) 
    for (pos_x = 0; pos_x < POOL_LENGTH; pos_x++) {
#ifdef ACTIVATION_LINEAR
      max = input[k][pos_x*POOL_STRIDE];
      x = 1;
#elif defined(ACTIVATION_RELU)
      max = 0;
      x = 0;
#endif
      for (; x < POOL_SIZE; x++) {
        tmp = input[k][(pos_x*POOL_STRIDE)+x]; 
        if (max < tmp)
          max = tmp;
      }
      output[k][pos_x] = max; 
    }
}

#undef INPUT_CHANNELS  
#undef INPUT_SAMPLES
#undef POOL_SIZE
#undef POOL_STRIDE
#undef POOL_PAD
#undef POOL_LENGTH
#undef ACTIVATION_LINEAR
/**
  ******************************************************************************
  * @file    flatten.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_DIM [1][64]
#define OUTPUT_DIM 64

//typedef number_t *flatten_14_output_type;
typedef number_t flatten_14_output_type[OUTPUT_DIM];

#define flatten_14 //noop (IN, OUT)  OUT = (number_t*)IN

#undef INPUT_DIM
#undef OUTPUT_DIM

/**
  ******************************************************************************
  * @file    fc.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_SAMPLES 64
#define FC_UNITS 64
#define ACTIVATION_RELU

typedef number_t dense_25_output_type[FC_UNITS];

static inline void dense_25(
  const number_t input[INPUT_SAMPLES], 			      // IN
	const number_t kernel[FC_UNITS][INPUT_SAMPLES],  // IN

	const number_t bias[FC_UNITS],			              // IN

	number_t output[FC_UNITS]) {			                // OUT

  unsigned short k, z; 
  long_number_t output_acc; 

  for (k = 0; k < FC_UNITS; k++) { 
    output_acc = 0; 
    for (z = 0; z < INPUT_SAMPLES; z++) 
      output_acc = output_acc + ( kernel[k][z] * input[z] ); 

    output_acc = scale_number_t(output_acc);

    output_acc = output_acc + bias[k]; 


    // Activation function
#ifdef ACTIVATION_LINEAR
    // Linear (MEANS NONE)
    output[k] = clamp_to_number_t(output_acc);
#elif defined(ACTIVATION_RELU)
    // ReLU
    if (output_acc < 0)
      output[k] = 0;
    else
      output[k] = clamp_to_number_t(output_acc);
#endif
  }
}

#undef INPUT_SAMPLES
#undef FC_UNITS
#undef ACTIVATION_RELU
/**
  ******************************************************************************
  * @file    weights/fc.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#define INPUT_SAMPLES 64
#define FC_UNITS 64


const int16_t dense_25_bias[FC_UNITS] = {-65, 118, -27, -16, 46, -53, 5, 90, -25, -32, -22, 112, -85, 15, -30, 132, -42, -68, -85, -41, -72, -13, 87, -28, -37, -41, 182, -28, -40, 98, 43, -37, -55, -30, 0, -57, 141, 58, 35, -43, -29, -62, -32, 46, -28, 45, -15, 68, 68, 110, 0, -52, 137, -26, 105, -32, 172, 69, -32, 27, 55, -34, 16, -61}
;

const int16_t dense_25_kernel[FC_UNITS][INPUT_SAMPLES] = {{44, 210, 92, 49, -107, -83, -25, -68, 65, 54, 29, 34, -132, 140, 17, 219, 147, 46, 34, 71, 5, 105, -94, -35, -79, -51, 40, 140, -131, 35, 79, -20, -86, 47, 28, 73, -113, -51, -129, -63, 156, 4, -11, 16, -106, 93, 105, 65, 125, 130, -48, -62, 56, -11, -33, -46, 8, 50, -39, -37, 37, 35, -120, -29}
, {-75, 0, -57, -168, -173, 78, -81, -35, 78, 69, -45, 25, -31, -53, -10, -126, 25, -81, -98, -82, 91, -55, 13, 66, -143, -82, -147, -131, -188, 40, -50, 60, 25, -90, 23, -4, 55, -81, -129, -165, -73, -19, -39, -193, -75, 135, 40, -44, 7, 99, 58, 45, -63, 78, 70, -33, -50, -84, -184, -137, -75, -271, 1, 117}
, {19, 63, 71, -11, 78, -121, 5, -91, 48, -117, 68, 45, 17, 60, 67, -73, -120, -96, 63, 52, -79, -58, -3, -85, -82, -84, 52, -59, 65, 19, -113, -26, -115, -50, -46, 32, -100, 93, 6, -99, -100, 14, -133, -74, 60, -43, -40, 75, 9, 49, 47, -10, -78, -55, -88, -76, 72, -56, 9, -40, -15, 39, -114, 65}
, {-52, -26, -13, 93, 6, 24, -142, 81, 14, 64, -95, 17, -176, 12, -33, -173, 101, 163, -86, 42, 102, 81, 29, -31, -28, -8, 67, -116, 89, 77, -101, 52, 81, 0, 103, 37, 88, -37, 17, 40, 171, -56, -171, -31, 50, -86, 48, -68, 72, 58, -55, 106, -18, -47, 77, -92, -43, 166, 56, 1, -49, -25, 43, 44}
, {51, -20, -45, -28, 55, 28, 14, -68, 71, 22, 21, 19, -7, 64, -112, 75, -111, -184, -37, -31, 1, -131, 41, 105, 166, 64, -200, 55, 4, 71, -8, 110, -1, -136, 30, 32, 50, 28, 94, 14, -22, -46, 17, -56, 0, 68, -58, -68, -139, 100, -90, 66, -57, -107, -66, 16, -64, 48, -42, -159, -16, 132, -84, 118}
, {36, -181, -118, 40, -100, -89, -85, 4, -105, 91, 11, 15, -7, 26, -135, -108, -71, 21, 95, -110, 30, -129, -49, -53, -137, 9, 7, -151, 121, -65, -32, -102, 19, -27, 30, -63, 97, 21, -66, -103, -53, -101, -124, -238, 42, -110, 103, -43, 70, 74, 17, -48, -32, 37, 47, -11, 17, -142, 28, -67, 80, -140, -70, -116}
, {-52, 23, -17, -91, 61, -6, 17, 46, -17, 52, -43, -86, 37, -35, -13, 74, -197, -138, -78, 49, 6, -58, 0, -69, 69, 77, -197, 147, -99, 5, 51, 30, -44, -160, -36, -72, -56, 49, -45, -116, -200, -124, 114, 51, 78, -48, 40, 11, 14, 51, -120, -5, -54, 77, 54, -3, 47, 16, 16, -18, -78, 39, 52, 107}
, {10, 28, -41, -121, -167, 0, -16, 4, -5, 39, 51, -84, -89, 114, 102, -166, 36, 3, 115, 44, 71, 144, -3, -78, -135, -22, 23, -9, 40, -70, -3, -19, 127, 50, 103, -8, 17, 86, -51, -41, 56, 58, -15, -33, 79, -8, 86, -119, 13, 22, 53, 24, 39, 6, 115, -17, -89, -49, -65, 39, 119, -16, 76, 129}
, {-172, -116, 76, -105, -28, -100, 163, -156, 56, 102, -11, -23, 88, 5, 44, 199, -200, -79, -55, -62, 91, -124, -56, -86, 128, -44, -87, 109, 46, -2, 196, 54, -58, -64, 71, -109, -28, 49, -62, -94, -166, -106, 10, -89, -11, -25, -101, 88, -146, 111, -96, 46, 107, -73, -60, 59, -12, -198, 85, -280, 57, 124, -27, 19}
, {-52, -72, 60, -42, 31, -124, -77, 42, -108, -16, 100, -59, 0, -113, 49, -11, -60, -144, -96, 100, -110, -37, -79, 1, -72, -53, 53, -81, -71, 28, 44, -78, -22, -83, -43, 37, -121, -40, 52, -86, 82, -23, -45, 66, -72, 56, 60, -44, 52, 57, 7, 21, -72, 67, 27, 6, 66, -62, -46, 10, 105, -56, -117, -100}
, {19, -80, 108, -4, -88, -53, -122, -101, 23, -56, 94, -63, -111, -101, -57, 0, -1, 79, -44, 92, -78, -109, -139, 26, -82, -103, 85, -88, -33, 58, 21, -18, -103, -55, 77, -38, 107, -98, -96, 59, -30, 26, 0, -4, 64, 60, 93, -92, -115, -95, -41, 12, 37, -45, 26, -51, 29, -83, -128, -70, 55, -75, 23, -94}
, {-112, 62, 88, -167, -165, 64, -68, -98, 80, 48, 49, -83, -90, 27, -48, -46, -71, -93, -1, 9, 134, -17, -133, 87, -25, 103, -80, -30, -107, 38, -205, -72, -85, 35, -1, -28, -76, 16, -54, -33, -122, -104, -95, -234, 33, 139, -89, -174, 61, -7, -22, 20, -95, 6, 66, 41, 143, -15, -189, -91, -39, -111, 39, 109}
, {-132, 129, -16, 6, 4, -69, -44, -13, 54, -75, 130, 66, -73, 51, 112, 63, 48, -39, -207, -7, 118, 3, 58, -84, -116, 31, 6, -54, -178, -122, 51, -96, -76, 27, 84, 41, 72, -4, -270, 21, 112, -71, 10, -37, -50, -56, -18, 19, -52, 50, -15, -104, -127, -13, -42, 104, -34, 8, -3, 123, -68, -84, -31, -11}
, {42, -101, 8, 11, 150, -85, 23, -141, -35, -67, -39, -34, 119, -15, -140, 84, -54, -130, 3, -136, -46, -9, 107, -49, 30, -82, -120, 166, 125, 15, 102, -45, 67, -117, -66, 6, 18, -72, 165, 84, -253, 61, 144, -71, -16, 36, 11, -88, -106, -70, -22, 52, 128, -78, 67, -41, 21, -3, 40, -144, 16, 86, 33, -24}
, {27, -35, 58, -26, -117, -59, 45, -85, -108, -94, 17, 125, -14, 93, 82, -60, -77, 70, 0, -94, 64, 55, 29, 50, -24, -140, -83, 51, -12, 58, -34, -8, -75, -41, -79, -94, -102, -63, -42, -63, -65, 55, 44, -37, 136, -105, -96, 29, -66, -140, -124, -13, -34, -27, -16, 11, 1, 29, 60, -95, 108, -116, 29, -113}
, {-125, 34, 49, -81, -72, 42, -133, 10, -44, 75, -8, -6, -182, 54, -67, -50, -142, -87, -100, -18, 120, 42, -162, 0, -34, 36, -108, -175, -164, 39, -119, 57, 0, -2, 68, -56, 37, -31, -139, -235, -52, -131, 22, -233, -95, 155, 80, -115, 34, 45, 154, 64, -146, -54, -1, 48, 88, -121, -247, -165, 23, -216, 3, 88}
, {-50, 57, -11, 81, 59, -111, -90, -33, -38, -41, 68, -45, -41, 121, 80, 192, 93, 67, -160, -84, 15, 4, 111, -60, -178, -101, -6, 14, -173, -99, 116, 24, -20, -1, 124, -2, 89, 4, -197, -69, 19, 29, 32, 85, -32, 65, 21, 127, 68, -30, -34, 64, -121, 106, 58, 63, -8, 10, -64, -58, -97, 115, 40, 18}
, {-2, 128, -36, -127, -66, 79, 58, -101, 80, 112, 92, 54, -9, 133, -63, 186, -27, 127, -49, 60, 112, 141, 119, -19, -114, -73, -64, 5, 3, -85, 113, -88, 65, -102, -20, 8, 85, -66, -55, -60, -99, 29, 144, 0, 48, 78, -45, 30, -77, 29, 27, 58, 33, 76, -68, 23, -146, -104, 109, -26, -78, 77, -80, 37}
, {7, 123, 30, 52, -25, -29, 85, 0, -15, -20, 6, 11, -132, -11, -18, 140, -47, 127, 106, -60, 37, 109, -32, 25, -42, -50, 16, -43, -83, -139, -14, -130, 6, -65, -3, 10, -39, -48, -49, -40, 72, -61, 15, 33, 6, -28, -3, 30, 35, 62, -20, 37, 17, 64, 132, 77, 54, 52, -97, 90, 53, 17, -99, 7}
, {-45, 264, 20, 96, -112, 87, 136, 27, -22, -71, -21, -6, -106, 29, 64, -46, 138, 210, -66, 57, 86, 12, 93, -36, -143, -101, 13, -45, -140, -34, -52, -79, 47, -59, 59, -39, -134, -17, -211, -100, 238, 45, 78, 112, 108, -83, -60, 72, 118, 4, 107, 103, 50, -9, -58, 105, -46, 90, -14, 131, 38, 50, -89, 83}
, {13, -13, 23, -84, -77, -84, -3, -15, 24, 94, -48, 10, 14, 35, 72, 30, -44, -51, -72, 91, -204, -9, 9, -81, -124, -35, -10, -95, -21, -2, 53, 0, -138, -5, 52, -38, -103, -28, -44, -158, -125, -190, 9, -138, -20, -34, -83, -81, -164, 23, -44, -23, -48, 16, 42, -108, -79, -44, -141, -45, 36, 38, -27, -129}
, {108, 203, -90, 87, -197, 79, 184, -112, 70, -123, 104, 35, -74, 33, 32, 95, 129, -18, 19, 89, 227, -76, 82, -85, -74, -33, -34, -49, 3, -75, 184, -78, -73, -47, 84, 104, 24, -25, -85, -102, 137, 37, 36, 26, 0, -37, -88, -23, 150, 158, 87, -63, 28, -14, 0, -88, 74, -99, -102, 166, -45, -91, -70, 27}
, {32, 63, -83, -76, -140, -48, -143, 85, 9, -87, -72, -64, -73, 42, -38, 35, -71, -5, -63, -81, 155, -67, -160, -41, -121, -57, -53, -64, 64, 3, 72, 39, 94, -15, -66, -15, 40, 55, 75, -44, -18, -55, -55, -125, -143, 155, 49, -78, -36, -41, 96, -15, 3, -63, 105, 150, -79, -90, -83, -96, 109, -17, 29, 26}
, {73, -21, -27, -14, -25, 12, -133, -83, 17, -28, 86, 104, -82, -61, -13, -107, 62, -122, -32, 58, -133, 80, -3, 50, -46, -30, -104, -78, -29, -123, 66, 57, 46, 62, 48, 81, -46, 51, 35, -45, 2, -64, 7, 80, -125, 62, -26, -74, -90, 37, -135, -41, 45, 31, 78, -53, -3, 21, 16, -112, 10, -7, 3, -95}
, {-61, 97, 25, -58, -1, 44, -34, -138, 49, -73, -36, -31, 98, -48, 40, 199, -203, -60, -92, -74, -3, 46, 86, -127, 82, -17, -103, 102, -80, -82, 79, 67, 64, -21, 56, -136, -74, 38, -145, -1, -134, -77, 48, 4, -45, 10, -67, -125, 35, -34, 0, 77, 56, 72, 20, 2, -50, -26, -81, -248, -39, 89, -46, -71}
, {-122, 28, 3, 39, -76, -63, -113, -62, 33, 6, 0, 9, -69, -49, -31, 45, -3, -16, 46, 25, 51, -40, 16, 35, -79, -28, 35, 1, -76, -54, 63, -14, -141, -95, -51, -27, -39, 129, -29, -30, 38, -94, 8, 50, 85, 47, 101, -16, -125, 9, -35, -40, -57, -25, -40, -121, -76, 28, -48, -104, 74, -10, -96, 34}
, {-165, 146, 109, -162, -142, 0, -57, 114, 42, 7, -54, -4, -150, 28, 49, -184, -78, -75, -15, 72, 171, 25, -275, 60, -143, -18, -111, -53, -249, -49, 65, -40, 67, -101, 34, 9, -3, 59, -227, -175, -114, -201, -193, -226, -90, 106, 30, -215, 31, -18, 39, -11, -278, 53, -92, -29, 24, -108, -201, -196, -23, -199, -26, 117}
, {-136, -109, 8, -114, 63, -6, -132, -102, 21, -87, 61, 90, -1, 38, -110, -16, -12, 104, -18, 71, -99, 54, -29, -42, -55, -39, 14, -94, 34, -21, -27, -99, 31, 53, 44, -31, -31, 36, -16, -25, -86, -11, -22, 1, 57, -72, 40, -76, -102, 21, 57, -35, -67, 0, 83, -110, -50, 67, 2, -46, 24, -75, 53, -16}
, {-95, -28, -59, -154, 83, -128, 99, -39, 29, 100, -37, 61, -98, -40, 103, 110, -12, 66, -87, -95, 65, -39, 6, 43, -75, -93, -75, 32, -63, 105, 19, 30, 4, -81, -34, -78, -12, 36, -212, 76, 18, 7, 95, 62, -38, 11, 9, 65, 20, 68, 61, 58, 110, -15, -71, 63, 93, 2, 40, -39, -1, 169, -59, -25}
, {-11, -139, 54, -7, -44, 33, 47, 38, -55, 48, -98, 37, 32, -134, 46, 98, -78, -138, 65, -19, 71, 50, 59, -98, 104, -54, -138, -46, -27, -56, 72, -12, -18, -91, -42, 102, -39, 34, -39, -77, -104, -159, 125, -72, -100, -27, -32, -100, 44, -13, -64, 104, -121, -67, -75, -57, 40, -111, -135, -157, -128, -113, -85, 86}
, {93, -65, 14, -20, -154, 148, 58, 44, -66, -56, 14, 14, -135, 65, 104, -98, -21, 2, 107, 72, -112, 22, 93, -69, -96, 54, -105, -13, 95, 10, -166, -113, 85, 163, 57, 12, -40, 55, 112, 101, 60, -9, -155, -76, -18, -27, -97, 87, 9, -7, 86, -84, -128, 48, 78, 63, 105, 35, -95, -3, -85, -142, -47, 61}
, {-72, 61, 24, -103, -82, -87, 49, -137, 32, -85, -17, 50, -86, 42, -64, -60, -74, 48, -78, -109, 18, 107, 0, -49, 0, -65, 51, -17, 57, 54, -114, -29, -68, -43, -93, -32, -4, 41, 62, -140, -48, 20, -11, -137, -49, -72, -32, -27, 15, -110, -43, -26, -33, -21, 106, -88, 101, -47, -104, 65, -41, 30, -42, 76}
, {90, 231, 63, -22, -46, -14, 168, 34, 30, 88, 15, -3, -160, -18, 48, 11, 162, 164, 121, -68, -1, 25, 121, 9, -51, 6, -32, 14, -150, -25, 67, -34, 44, 20, 81, -106, -23, 71, -268, -92, 140, -34, -7, 9, 6, -22, 87, -3, 116, 121, 34, -35, 68, -56, 98, 41, -20, 22, 106, 88, 55, -69, 53, -125}
, {93, -143, -94, 28, -95, 45, 61, 51, -102, -82, -27, 94, -43, 30, 92, -85, -2, -40, -7, 73, -142, -24, 46, -42, -122, 66, -100, 52, 9, -96, -48, -7, -21, -80, 85, -11, -53, 103, -30, -115, 90, -51, -83, -89, -43, -6, -8, -46, -95, -116, 74, -137, 3, -103, -63, -128, -78, -103, 69, -74, 0, 39, 0, -73}
, {-160, -74, 26, 19, 66, 23, 145, -93, 46, 3, -4, 110, 117, -17, 4, 150, -35, -104, -86, 11, -58, -83, 12, 80, 25, 53, -153, 156, -76, 95, 140, 114, -20, -86, -31, -39, 18, 16, -82, -105, -18, -152, -4, -50, -73, 48, -8, -54, -46, -54, 62, 35, 120, -87, -89, -55, -15, -100, 3, 3, 36, 69, 13, 94}
, {-42, 127, -37, 60, -29, 5, 48, 26, 122, -123, 47, -11, 37, -19, 88, -8, 57, 112, -129, 9, 70, 99, -13, -40, -8, -148, -25, -112, -151, -112, 18, -126, 47, 112, -8, 18, -40, 0, -223, -21, 5, 72, -145, 9, -80, -101, 27, -3, 7, 113, 60, -128, 38, 63, 53, 70, 53, -15, -76, 207, -21, -82, 33, -92}
, {-73, 98, -32, -65, -221, 99, -135, 37, 34, -28, -42, -160, -102, 68, -58, -134, -10, -67, -1, -84, 200, 35, -231, 134, -203, 106, -182, -3, -336, 7, 12, -15, -93, -83, -114, -65, -125, -62, -199, -258, -40, -262, -170, -239, -6, 109, -121, -133, 57, 88, 68, 113, -121, 18, 30, 5, 56, -194, -304, -64, -32, -73, -76, 97}
, {22, -94, -74, 72, -26, 162, -116, 114, 73, 122, -100, -70, -136, -42, -61, -203, -74, -39, -41, 44, -154, 62, -82, 79, -9, -9, -83, -196, 143, 84, -98, 118, 139, 11, 44, 70, -29, 109, 177, 131, -205, -49, -16, -30, -16, 67, -60, -16, 58, 18, 7, -35, -90, 97, -109, 112, -18, 143, 9, -79, 7, -149, -19, 110}
, {6, -110, 78, 39, 16, -22, -4, 83, -28, -130, -19, -100, -39, 8, -72, -230, -136, -153, -32, -24, -30, 43, -124, 94, -123, 19, -127, -130, 0, -59, -257, 28, 109, -9, -17, 51, 23, -5, 45, 113, -248, -20, -89, 79, 40, -23, -117, 52, 11, -15, 75, -30, -101, 43, 45, -120, -27, 109, 31, -153, 23, -166, -11, -99}
, {-130, 67, -34, -70, 53, -129, -78, -112, 93, -38, 82, 39, -13, 14, -61, -19, -9, 22, 22, 42, -40, 10, -109, -41, 39, -95, -2, -117, -9, 63, -127, -91, -27, 36, -4, 24, -147, -107, 64, -72, 21, -92, -134, 56, 44, 25, 83, 37, -48, -115, -104, -99, -6, 8, -102, -91, -136, 59, 21, 5, 47, -14, -71, 45}
, {-206, 48, -127, -162, 102, -113, 158, -100, 54, 5, 99, -11, 130, 58, -13, 92, -123, -209, -113, 6, -8, -16, 56, -46, 42, -3, -90, 92, -160, 7, 202, -37, 48, -90, -91, 0, -36, 38, 13, -17, -224, -105, 103, 45, 28, 131, -90, 54, 45, 1, 35, -53, -63, 96, 13, -59, -82, -147, 19, -231, -43, 126, -49, -109}
, {-88, -14, 11, -152, 119, -183, 138, 20, -93, 105, -34, -66, 120, 22, -78, 193, -229, -49, 19, -57, -1, -103, 12, -14, -33, 20, -104, 66, -96, 11, 269, -108, -72, -181, -98, 35, 38, -40, -114, 40, -217, -205, 117, 15, 41, 125, -48, 15, -181, 60, -61, -50, 48, -104, -85, -108, 29, -63, 74, -217, -116, 139, -56, 71}
, {63, 201, -57, 9, -214, -105, -36, -145, 88, -89, -35, 66, -96, -9, -19, 126, 118, 7, -189, -25, 128, 83, -32, 65, -129, -76, 35, 96, -68, -72, 96, -151, -100, -10, -57, 5, 6, -12, -189, -132, 45, 39, -46, 62, 4, -58, 105, -72, -15, 25, 133, -177, -97, -108, -94, -3, 110, 5, 70, 3, -67, -61, -67, -20}
, {45, -106, -90, 45, -57, -34, -52, 203, -26, 60, -11, -17, -25, -40, 29, -115, -70, -102, 31, 64, -79, -51, -122, -69, -58, 84, -82, -94, 69, 75, -100, 47, 109, 131, 8, -72, 28, -94, 23, 33, -162, -7, -9, -90, 100, -74, -73, -73, 39, -2, 36, 113, 54, -29, -62, 45, -54, 94, 20, -100, 18, -84, -3, -62}
, {-99, -19, 21, 15, -122, -56, 77, 12, -85, 28, -56, 99, -20, 49, -110, -98, 47, -103, -12, 57, -98, -19, 79, 13, -71, -99, -64, 72, -13, 66, -30, -5, -77, -73, -10, -95, -80, 62, 28, -113, 77, -73, -121, 78, 62, 11, -32, -107, -122, -102, 58, -114, -73, 98, 95, -103, -37, 41, -39, 80, 14, -63, -134, 15}
, {-31, -94, -113, -97, -26, 77, -24, 169, 49, 54, -59, 87, 17, 65, -43, -73, -105, -161, 34, -45, -31, -103, 0, 14, -110, 28, -81, -161, 59, 101, -39, 120, 31, -42, 18, -12, 18, 32, 164, 49, -119, -78, -145, -85, -68, 0, 71, -96, 58, -123, -55, 104, 47, -70, -52, 1, 26, 75, 7, -54, 17, -2, -46, 91}
, {-113, 59, -83, -122, 69, -50, 53, -52, -109, 8, 47, 95, 13, 28, -20, 146, -136, -141, 5, -3, -65, 68, -42, 29, 131, -105, -189, 154, -141, -13, 217, 0, -18, -44, 32, 65, 65, 4, 21, 28, -173, 3, 183, -87, -44, 8, 72, 98, 2, 75, -37, 45, 40, 99, -134, 34, 81, -26, 26, -207, -67, 31, 55, 12}
, {61, -79, -29, -67, -29, 163, -192, 226, 73, -62, -8, -51, -43, -21, -9, -161, 4, -75, -31, -88, -13, 110, -66, -51, 113, 120, -41, -106, -2, 104, -202, -44, 122, 131, 69, -37, 22, 80, 108, 124, -49, -6, -120, -73, 25, 70, -90, -99, 4, -76, 93, 133, -19, -67, -62, 76, -2, -10, -41, 14, -52, -136, 94, 33}
, {90, -177, -34, 79, 81, 131, -113, 196, -62, -117, -28, 14, -38, -89, -100, -170, -118, -24, 28, 53, -132, 14, -102, 117, -22, 71, -48, -112, 39, 64, -215, 92, 92, 103, 54, 71, -24, -69, 140, 17, -19, 105, 21, -50, 35, 6, -52, -18, -113, 36, -58, -8, -47, 32, -120, 23, -60, 126, -73, -10, 18, -118, -46, 140}
, {24, -18, 7, -219, -99, 51, -40, 58, 99, 79, -85, 18, -50, -99, 78, -117, -62, -150, -26, 100, 139, -45, -31, 19, 3, 84, -228, -114, -223, -54, -15, -9, -118, -57, -7, 22, 4, -8, -248, -214, -168, -81, -144, -129, -29, 76, -82, -200, -6, 100, 109, 27, -183, -26, 22, 41, 45, -48, -222, -127, 55, -241, -75, 50}
, {-92, 104, -72, -6, -33, -39, -33, -90, -4, -94, 96, -67, 27, -19, -74, 44, -85, -81, -78, 101, -71, 85, -79, 12, -105, -6, -28, -5, 110, -38, -2, -56, -46, -65, 7, 103, -69, 13, -7, 44, -79, -4, 95, -94, -5, -73, -60, -102, 109, -67, 13, 106, -95, -89, 17, 84, 61, 19, 104, 40, 19, 3, 86, -108}
, {-98, -130, -50, -223, -186, -40, -95, -69, -52, -30, 21, 0, -229, -73, 40, 111, -24, -106, 72, 31, 6, -27, -124, -68, -16, -123, -153, -24, -186, -32, 87, -30, -68, -22, -49, 9, -151, -32, -116, -49, -197, -179, 142, -86, -145, 100, 62, -1, 21, -126, -147, -21, -44, -71, 74, -12, 23, 110, -146, -134, -41, 47, -70, 133}
, {-139, 109, 26, -125, -255, -8, -158, 29, 97, 40, 60, 50, -69, -13, -1, 8, -131, -3, 57, -67, 172, -95, -217, -13, -97, 28, -173, -141, -306, 3, -73, -63, -12, -125, -88, 98, -7, -81, -211, -153, -18, -92, -21, -176, -39, 9, 3, -100, 68, 124, 49, 83, -229, 28, -48, -42, -116, -119, -176, -236, -6, -69, -85, 116}
, {105, 229, -51, 11, -8, 68, 14, -105, -93, 8, -70, 74, -144, 44, 15, 106, 164, 73, -63, -56, 192, 6, 133, -60, -146, -23, 148, -82, -104, 81, 117, -85, 65, 52, 30, 37, -84, 29, -121, -118, 62, 94, -64, -55, 47, 95, 57, 48, 92, 114, 73, -86, -101, 58, 83, -72, 106, 119, 14, 136, 107, -83, 61, 5}
, {-25, 52, 70, 30, -179, 16, -132, 52, 30, -86, 7, -129, -6, 52, 75, -82, -103, -113, -80, 103, 120, -116, 4, -69, 30, 54, -18, -130, -118, -48, -125, -15, -20, 88, -38, 68, -46, 23, -142, 52, -159, -59, -127, -138, 4, 123, -71, -156, 48, 38, 124, -60, -187, -102, -28, 102, -15, 5, -127, -177, 94, -130, 12, -26}
, {-104, -77, 24, -34, -45, -124, 24, 13, -52, 30, 0, 74, -25, -78, 95, -171, -7, -46, 37, 29, -318, -88, 58, 33, 23, -91, 2, 28, -29, 26, -157, -56, 1, 47, 75, -111, -128, -93, 174, 111, -90, 86, -119, -23, 4, -130, 0, -29, 13, -224, -20, -139, 17, -15, -65, -90, 29, -83, 11, -63, 44, -88, -39, -31}
, {-53, 98, -54, -168, -241, 69, -211, 16, 58, -78, -14, -40, -56, 54, -114, -139, -62, -31, -86, 136, 200, -55, -204, 24, -179, 66, -187, -114, -142, -56, -14, 39, 47, -26, -15, -80, 58, -110, -260, -192, -81, -94, -85, -195, -61, 146, -96, -49, 33, 2, -43, 44, -144, 12, -20, 72, 77, -94, -278, -253, 63, -122, -50, 36}
, {72, 99, -62, 171, 115, 87, 117, 126, -82, -97, 32, -81, 98, 25, 49, -78, -36, 134, -3, 31, 27, -22, 0, -71, 5, 205, 22, 136, 145, -6, -45, 59, -6, 215, 84, 67, 50, -28, 156, 24, 170, -29, -17, 44, -3, 105, 80, 39, 43, -25, -56, 38, -88, -58, -110, -6, -15, 89, 0, 91, -46, 117, -72, 50}
, {-78, 41, -36, -63, -27, -70, 146, -55, 62, 48, -45, -51, 20, -107, 88, 59, 190, 185, -123, 60, 86, 62, 166, 13, -21, -109, 9, 93, -272, 0, 152, 125, -45, 105, 99, 33, -46, 3, -269, -20, 156, 5, 124, 62, 79, -4, -38, 115, 91, -37, -67, 77, -51, 91, -28, 63, 88, 22, 86, -21, -62, -8, 67, 49}
, {41, 94, -54, 106, -149, 116, -28, 98, 133, -88, -129, 93, 13, -76, -70, -157, 94, 58, 139, 17, 95, -28, -45, 0, -21, 43, 180, -157, 67, 117, -136, -41, 79, 135, -65, -56, 67, 65, -28, -93, 122, 48, -98, 103, -83, -40, -72, 23, 169, 91, 51, 119, 45, 13, 137, -68, 1, 98, 74, 97, 55, -91, -3, 127}
, {34, -13, -47, -82, -34, -76, -3, 129, 134, -87, 30, 61, 45, 30, -124, -96, -187, -115, 1, 67, -16, -15, -27, 64, -32, 128, -76, -85, 17, 95, -138, 11, 99, -19, -46, 105, -2, 69, 43, 58, -100, -93, 57, -121, -124, 15, 45, 14, -1, -38, -85, 81, 12, 38, 31, -31, 104, 5, -156, -175, -113, -195, 113, 144}
, {-169, -47, -86, -116, -57, -113, 71, -162, -4, 120, -16, 84, 108, 10, 29, 113, -85, -78, 24, -13, 76, 7, -123, 84, -27, -76, -114, 45, -74, 14, 147, 23, -70, -111, -30, -51, -21, 43, 67, -41, -105, -110, 103, -58, -70, 16, -9, 49, -125, 64, -91, -93, 37, -26, 71, 45, -66, -39, 90, -187, -136, 146, -81, 51}
, {-116, -52, 33, -146, -71, -91, 14, -139, 60, -68, 53, 29, -73, 25, 17, 0, -177, -145, 25, -64, 68, -61, 111, 70, 117, -30, -25, 136, -175, 74, 138, -23, 39, -161, 75, -82, -15, -128, -89, -102, -109, -62, 86, 34, 82, 130, -57, -4, -37, 110, 43, -96, 104, -55, -19, -44, 101, -3, -58, -119, -100, 109, -54, 45}
, {4, 140, -67, -36, -1, -70, 109, -194, 25, -15, -108, 26, -162, 91, -60, 103, 148, 230, -102, 18, 41, -60, 98, 43, 16, -75, 99, 21, -22, 85, 111, 53, -8, -59, 32, -101, -17, 74, -216, 32, 87, 13, 123, -81, 15, -7, 39, 69, 146, 115, -82, 19, -105, 46, -26, -45, 74, 98, 6, 50, -37, 14, -46, 61}
}
;

#undef INPUT_SAMPLES
#undef FC_UNITS
/**
  ******************************************************************************
  * @file    fc.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define INPUT_SAMPLES 64
#define FC_UNITS 3
#define ACTIVATION_LINEAR

typedef number_t dense_26_output_type[FC_UNITS];

static inline void dense_26(
  const number_t input[INPUT_SAMPLES], 			      // IN
	const number_t kernel[FC_UNITS][INPUT_SAMPLES],  // IN

	const number_t bias[FC_UNITS],			              // IN

	number_t output[FC_UNITS]) {			                // OUT

  unsigned short k, z; 
  long_number_t output_acc; 

  for (k = 0; k < FC_UNITS; k++) { 
    output_acc = 0; 
    for (z = 0; z < INPUT_SAMPLES; z++) 
      output_acc = output_acc + ( kernel[k][z] * input[z] ); 

    output_acc = scale_number_t(output_acc);

    output_acc = output_acc + bias[k]; 


    // Activation function
#ifdef ACTIVATION_LINEAR
    // Linear (MEANS NONE)
    output[k] = clamp_to_number_t(output_acc);
#elif defined(ACTIVATION_RELU)
    // ReLU
    if (output_acc < 0)
      output[k] = 0;
    else
      output[k] = clamp_to_number_t(output_acc);
#endif
  }
}

#undef INPUT_SAMPLES
#undef FC_UNITS
#undef ACTIVATION_LINEAR
/**
  ******************************************************************************
  * @file    weights/fc.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#define INPUT_SAMPLES 64
#define FC_UNITS 3


const int16_t dense_26_bias[FC_UNITS] = {77, -44, -67}
;

const int16_t dense_26_kernel[FC_UNITS][INPUT_SAMPLES] = {{61, 242, -94, 61, 43, 89, 28, -53, -141, -5, 92, 234, -78, 69, 72, 224, -97, -94, -55, 15, 0, -36, 119, 29, -89, -30, 263, -16, -22, 28, 164, -31, -103, 93, -41, 82, 389, 186, 140, 17, -146, 69, -64, 109, 93, 30, -12, 150, 190, 298, -120, -68, 373, -60, 143, -42, 356, 139, -187, 59, 201, -148, -2, -73}
, {77, 29, 41, -61, 82, 28, 72, -183, 87, -5, 6, -2, -48, 167, -104, -122, 28, 15, -75, -35, -75, -77, -128, 104, -66, 0, -338, -2, 84, -19, -82, -97, -7, 105, 72, 34, -283, -152, 43, -81, 130, 167, -28, -118, 17, -77, 157, -121, -94, 41, 73, 71, -344, -120, -157, -98, -156, 46, 84, -196, 90, 12, 114, 0}
, {124, -175, 100, 61, -183, 37, -120, -50, -190, -99, 93, -253, 27, -189, 93, -351, 78, 16, -33, 178, 36, 203, 37, 107, -148, 83, -350, -39, 32, -131, 124, 70, 167, 90, -129, 160, -235, -127, 68, -111, -194, 8, 48, -20, 70, -87, -97, -71, -62, -185, 57, -105, -205, 185, -138, -107, -204, -54, 161, 84, -78, -158, -143, 90}
}
;

#undef INPUT_SAMPLES
#undef FC_UNITS
/**
  ******************************************************************************
  * @file    model.hh
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    08 july 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef __MODEL_H__
#define __MODEL_H__

#ifndef SINGLE_FILE
#include "number.h"
#endif

#define MODEL_OUTPUT_SAMPLES 3
#define MODEL_INPUT_SAMPLES 32 // node 0 is InputLayer so use its output shape as input shape of the model
#define MODEL_INPUT_CHANNELS 3

void cnn(
  const number_t input[MODEL_INPUT_CHANNELS][MODEL_INPUT_SAMPLES],
  //dense_26_output_type dense_26_output);
  number_t output[MODEL_OUTPUT_SAMPLES]);

#endif//__MODEL_H__
/**
  ******************************************************************************
  * @file    model.cc
  * @author  Pierre-Emmanuel Novac <penovac@unice.fr>, LEAT, CNRS, Université Côte d'Azur, France
  * @version 1.0.0
  * @date    24 march 2020
  * @brief   Template generating plain C code for the implementation of Convolutional Neural Networks on MCU
  */

#ifndef SINGLE_FILE
#include "number.h"
#include "model.h"

 // InputLayer is excluded
#include "conv1d_26.c"
#include "weights/conv1d_26.c" // InputLayer is excluded
#include "max_pooling1d_23.c" // InputLayer is excluded
#include "conv1d_27.c"
#include "weights/conv1d_27.c" // InputLayer is excluded
#include "max_pooling1d_24.c" // InputLayer is excluded
#include "flatten_14.c" // InputLayer is excluded
#include "dense_25.c"
#include "weights/dense_25.c" // InputLayer is excluded
#include "dense_26.c"
#include "weights/dense_26.c"
#endif

void cnn(
  const number_t input[MODEL_INPUT_CHANNELS][MODEL_INPUT_SAMPLES],
  dense_26_output_type dense_26_output) {

  // Output array allocation
  static union {
    conv1d_26_output_type conv1d_26_output;
    conv1d_27_output_type conv1d_27_output;
    dense_25_output_type dense_25_output;
  } activations1;

  static union {
    max_pooling1d_23_output_type max_pooling1d_23_output;
    max_pooling1d_24_output_type max_pooling1d_24_output;
    flatten_14_output_type flatten_14_output;
  } activations2;


  //static union {
//
//    static input_15_output_type input_15_output;
//
//    static conv1d_26_output_type conv1d_26_output;
//
//    static max_pooling1d_23_output_type max_pooling1d_23_output;
//
//    static conv1d_27_output_type conv1d_27_output;
//
//    static max_pooling1d_24_output_type max_pooling1d_24_output;
//
//    static flatten_14_output_type flatten_14_output;
//
//    static dense_25_output_type dense_25_output;
//
  //} activations;

  // Model layers call chain
 // InputLayer is excluded 
  conv1d_26(
     // First layer uses input passed as model parameter
    input,
    conv1d_26_kernel,
    conv1d_26_bias,
    activations1.conv1d_26_output
  );
 // InputLayer is excluded 
  max_pooling1d_23(
    
    activations1.conv1d_26_output,
    activations2.max_pooling1d_23_output
  );
 // InputLayer is excluded 
  conv1d_27(
    
    activations2.max_pooling1d_23_output,
    conv1d_27_kernel,
    conv1d_27_bias,
    activations1.conv1d_27_output
  );
 // InputLayer is excluded 
  max_pooling1d_24(
    
    activations1.conv1d_27_output,
    activations2.max_pooling1d_24_output
  );
 // InputLayer is excluded 
  flatten_14(
    
    activations2.max_pooling1d_24_output,
    activations2.flatten_14_output
  );
 // InputLayer is excluded 
  dense_25(
    
    activations2.flatten_14_output,
    dense_25_kernel,
    dense_25_bias,
    activations1.dense_25_output
  );
 // InputLayer is excluded 
  dense_26(
    
    activations1.dense_25_output,
    dense_26_kernel,
    dense_26_bias, // Last layer uses output passed as model parameter
    dense_26_output
  );

}
